<?xml version="1.0"?>
<querys>

  <!--BASE TIENDA -->
  <query code="GetLabelLPNDispachByIdLpn">
    <sql>
      SELECT
      UPPER(OO.CustomerName) AS CustomerName
      ,UPPER(CO.CompanyName) AS CompanyName
      ,OO.OutboundNumber
      ,L.IdLpnCode
      ,LT.LpnTypeCode
      ,UPPER(COALESCE(OO.DeliveryAddress1,' ')) AS DeliveryAddress1
      ,UPPER(COALESCE(C.CityName,' ')) AS CityName
      ,(SELECT COUNT(DISTINCT DD.IdLpnCode) FROM DispatchDetail DD
      INNER JOIN Dispatch D ON D.IdDispatch = DD.IdDispatch AND DD.IdWmsProcessCode IN ('PACK')
      INNER JOIN LPN L ON L.IdLpnCode = DD.IdLpnCode
      WHERE D.IdOutboundOrder = OO.IdOutboundOrder) AS TotalBultosDespachar
      ,DD.Row AS NroDeBulto
      ,COALESCE(L.LpnParent,L.IdLpnCode,' ') As LpnPadre
      ,CONVERT(DECIMAL(9,2),L.WeightTotal) AS WeightTotal
      FROM OutboundOrder OO
      INNER JOIN Dispatch D ON D.IdOutboundOrder = OO.IdOutboundOrder
      INNER JOIN (Select  ROW_Number() OVER (ORDER BY IdLpnCode ASC) AS Row,IdLpnCode, IdDispatch from DispatchDetail
      where IdWmsProcessCode IN ('PACK')
      AND IdDispatch in (Select IdDispatch from Dispatch
      Where IdOutboundOrder in (select IdOutboundOrder from Stock
      where IdLpnCode = @idLpnCode)) Group by IdLpnCode, IdDispatch) DD ON D.IdDispatch = DD.IdDispatch
      INNER JOIN LPN L ON L.IdLpnCode = DD.IdLpnCode
      INNER JOIN LPNType  LT ON L.IdLpnType = LT.IdLpnType
      LEFT JOIN City C ON C.IdCity = OO.IdCityDelivery
      ,Company CO
      WHERE  L.IdLpnCode = @idLpnCode
    </sql>
    <parameters>
      <parameter type="String">idLpnCode</parameter>
    </parameters>
  </query>




  <!--SODIMAC -->
  <query code="SODIMAC_GetLabelLPNDispachByIdLpn">
    <sql>
      SELECT B.BranchName,
      B.BranchCode AS CustomerCode,
      L.SealNumber,
      B.BranchAddress AS CustomerName,
      LT.LpnTypeCode,
      OO.OutboundNumber,
      OO.ReferenceNumber,
      OO.DeliveryAddress1,
      OO.Invoice as NroCita,
      L.IdLpnCode,
      I.ItemCode,
      COALESCE(L.LpnParent,L.IdLpnCode) As LpnPadre,
      (SELECT COUNT(DISTINCT DD.IdLpnCode) FROM DispatchDetail DD
      INNER JOIN Dispatch D ON D.IdDispatch = DD.IdDispatch AND DD.IdWmsProcessCode IN('PICK','PACK','LOAD','SORT')
      INNER JOIN LPN L ON L.IdLpnCode = DD.IdLpnCode
      WHERE D.IdOutboundOrder = OO.IdOutboundOrder
      AND L.IsClosed = 1) AS Cerrados,
      (SELECT COUNT(DISTINCT DD.IdLpnCode) FROM DispatchDetail DD
      INNER JOIN Dispatch D ON D.IdDispatch = DD.IdDispatch AND DD.IdWmsProcessCode IN('PICK','PACK','LOAD','SORT')
      INNER JOIN LPN L ON L.IdLpnCode = DD.IdLpnCode
      WHERE D.IdOutboundOrder = OO.IdOutboundOrder
      AND L.IsClosed = 0) AS NoCerrados
      FROM OutboundOrder OO
      INNER JOIN Customer C ON C.CustomerCode = OO.CustomerCode
      LEFT JOIN Branch B ON B.IdBranch = OO.IdBranch
      INNER JOIN Dispatch D ON D.IdOutboundOrder = OO.IdOutboundOrder
      INNER JOIN DispatchDetail DD ON D.IdDispatch = DD.IdDispatch AND DD.IdWmsProcessCode IN('PICK','PACK','LOAD','SORT')
      INNER JOIN Item I ON I.IdOwn = OO.IdOwn And I.IdItem = DD.IdItem
      INNER JOIN LPN L ON L.IdLpnCode = DD.IdLpnCode
      INNER JOIN LPNType  LT ON L.IdLpnType = LT.IdLpnType
      WHERE L.IdLpnCode = @idLpnCode
    </sql>
    <parameters>
      <parameter type="String">idLpnCode</parameter>
    </parameters>
  </query>


	<!-- DARTEL -->
	<query code="DARTEL_GetLabelLPNDispachByIdLpn">
		<sql>
			SELECT
			L.IdLpnCode,
			OWN.OwnName AS OwnerName,
			OO.DeliveryAddress1 AS AddressCustomer,
			OO.CustomerName AS CustomerName,
			CTY.CityName AS CityName,
			OO.OutboundNumber AS OutboundNumber,
			L.SealNumber
			-- COALESCE(L.LpnParent,L.IdLpnCode) As LpnPadre,

			FROM OutboundOrder OO
			INNER JOIN Customer C ON C.CustomerCode = OO.CustomerCode
			INNER JOIN Owner OWN ON OWN.IdOwn = OWN.IdOwn
			INNER JOIN Dispatch D ON D.IdOutboundOrder = OO.IdOutboundOrder
			INNER JOIN DispatchDetail DD ON D.IdDispatch = DD.IdDispatch AND DD.IdWmsProcessCode IN('PICK','PACK','LOAD','SORT')
			INNER JOIN Item I ON I.IdOwn = OO.IdOwn And I.IdItem = DD.IdItem
			INNER JOIN LPN L ON L.IdLpnCode = DD.IdLpnCode
			LEFT JOIN City  CTY ON CTY.IdCity =  OO.IdCityDelivery
			WHERE L.IdLpnCode = @idLpnCode
		</sql>
		<parameters>
			<parameter type="String">idLpnCode</parameter>
		</parameters>
	</query>
  
  
     <!--INICIO ETIQUETA DESPACHO-->
  
  <!-- ABCDIN B2B -->
  <!--Etiqueta Despacho-->
  <query code="ABCDIN_GetLabelLPNDispachByIdLpn">
    <sql>
      SELECT
      CO.CompanyCode AS RutProveedor
      ,CO.CompanyName AS RazonSocialProveedor
      ,OO.IdOwn
      ,S.IdLpnCode
      ,L.SealNumber
      ,I.ItemCode AS SkuProveedor
      ,IC.ItemCodeCustomer AS SkuCliente
      ,I.ShortItemName AS ItemName
      ,I.Description AS ItemDescription
      ,C.CustomerName AS NombreCliente
      ,OO.CustomerCode AS CodigoCliente
      ,C.Address1Fact
      ,OO.DeliveryAddress1
      ,RD.ReferenceDocNumber AS NroDocumentoDespacho
	    ,RDT.ReferenceDocTypeName AS TipoDocumentoFiscal
      ,OO.ReferenceNumber AS OrdenCompraCliente
      , OO.Invoice AS NroCita
      ,COALESCE(L.LpnParent,S.IdLpnCode) As LpnPadre
      ,CONVERT(INT,SUM(S.ItemQty)) AS ItemQty
      FROM Stock S
      INNER JOIN LPN L ON L.IdOwn = S.IdOwn AND L.IdLpnCode = S.IdLpnCode
      INNER JOIN Item I ON I.IdOwn = S.IdOwn AND I.IdItem = S.IdItem
      INNER JOIN OutboundOrder OO ON OO.IdWhs = S.IdWhs AND OO.IdOwn = S.IdOwn AND OO.IdOutboundOrder = S.IdOutboundOrder
      INNER JOIN Customer C ON C.CustomerCode = OO.CustomerCode AND C.IdOwn = OO.IdOwn
      INNER JOIN ItemCustomer IC	ON IC.IdItem = I.IdItem AND IC.IdCustomer = C.IdCustomer
	    LEFT JOIN ReferenceDoc RD ON RD.IdOwn = OO.IdOwn AND RD.IdOutboundOrder = OO.IdOutboundOrder
	    LEFT JOIN ReferenceDocType RDT ON RDT.IdReferenceDocType = RD.IdReferenceDocType
      ,Company CO
      WHERE S.IdLpnCode = @idLpnCode
      GROUP BY CO.CompanyCode ,CO.CompanyName ,OO.IdOwn ,S.IdLpnCode ,L.SealNumber ,I.ItemCode ,IC.ItemCodeCustomer ,I.ShortItemName
      ,I.Description ,C.CustomerName ,OO.CustomerCode ,C.Address1Fact ,OO.DeliveryAddress1 ,RD.ReferenceDocNumber,RDT.ReferenceDocTypeName,OO.ReferenceNumber,L.LpnParent,OO.Invoice 
    </sql>
    <parameters>
      <parameter type="String">idLpnCode</parameter>
    </parameters>
  </query>
  
  <!--Etiqueta Despacho Packing List-->
  <query code="ABCDIN_GetLabelLPNPackingListByIdLpn">
    <sql>
      SELECT
      '' AS ItemCode,
      '' AS ItemName,
      0 AS ItemQty,
      @idLpnCode AS IdLpnCode
    </sql>
    <parameters>
      <parameter type="String">idLpnCode</parameter>
    </parameters>
  </query>

  <!--FIN ABCDIN B2B -->

  <!-- CORONA & RIPLEY B2B -->
  <!--Etiqueta Despacho-->
  <query code="CORONA_GetLabelLPNDispachByIdLpn">
    <sql>
      SELECT
      L.IdLpnCode
      ,L.SealNumber
      ,B.BranchName AS NombreSucursalDestino
      ,B.BranchCode AS CodigoSucursalDestino
      ,IC.DepartmentItem AS SeccionBulto
      ,IC.DepartmentItem AS CodigoDepartamento
      ,Ic.DepartmentDescription AS DescripcionDepartamento
      ,CO.CompanyCode AS RutProveedor
      ,CO.CompanyName AS RazonSocialProveedor
      ,DD.ItemQty
      ,I.Description AS DescripcionArticulo
      ,I.ItemCode AS SKUProveedor
      ,IC.ItemCodeCustomer AS SKUCliente
      ,IC.BarCode AS Ean13
      ,D.DateCreated AS FechaDespacho
      ,RD.ReferenceDocNumber AS NroDocumentoDespacho
      ,OO.ReferenceNumber AS OrdenCompraCliente
      ,COALESCE(L.LpnParent,L.IdLpnCode) As LpnPadre
      ,B.SpecialField1 AS Letra
      ,OO.Invoice as NroCita
      ,O.OwnCode
      ,O.OwnName
      FROM OutboundOrder OO
      INNER JOIN Owner O ON OO.IdOwn = O.IdOwn
      INNER JOIN Customer C ON C.CustomerCode = OO.CustomerCode AND C.IdOwn = OO.IdOwn
      LEFT JOIN Branch B ON B.IdBranch = OO.IdBranch
      INNER JOIN Dispatch D ON D.IdOutboundOrder = OO.IdOutboundOrder
      INNER JOIN DispatchDetail DD ON D.IdDispatch = DD.IdDispatch AND DD.IdWmsProcessCode IN('PICK','PACK','LOAD','SORT')
      INNER JOIN Item I ON I.IdItem = DD.IdItem
      --INNER JOIN ItemUom IU ON IU.IdItem = I.IdItem AND UPPER(IU.UomName) = 'UNIDAD'
      INNER JOIN ItemCustomer IC ON IC.IdItem = I.IdItem AND IC.IdCustomer = C.IdCustomer
      INNER JOIN LPN L ON L.IdLpnCode = DD.IdLpnCode
      INNER JOIN LPNType  LT ON L.IdLpnType = LT.IdLpnType
      LEFT JOIN ReferenceDoc RD On RD.IdOWn = OO.IdOwn AND RD.IdWhs = OO.IdOwn AND RD.IdOutboundOrder = OO.IdOutboundOrder
      ,Company CO
      WHERE L.IdLpnCode =  @idLpnCode
    </sql>
    <parameters>
      <parameter type="String">idLpnCode</parameter>
    </parameters>
  </query>
  
  <!--Etiqueta Despacho Packing List-->
  <query code="CORONA_GetLabelLPNPackingListByIdLpn">
    <sql>
      SELECT
      '' AS ItemCode,
      '' AS ItemName,
      0 AS ItemQty,
      @idLpnCode AS IdLpnCode
    </sql>
    <parameters>
      <parameter type="String">idLpnCode</parameter>
    </parameters>
  </query>

  <!--FIN CORONA & RIPLEY B2B -->

  

  <!-- LA POLAR & PARIS & JOHNSONS B2B -->
  <!--Etiqueta Despacho-->
  <query code="LAPOLAR_GetLabelLPNDispachByIdLpn">
    <sql>
      SELECT
      CO.CompanyCode AS RutProveedor
      ,CO.CompanyName AS RazonSocialProveedor
      ,OO.IdOwn
      ,O.OwnName AS Proveedor
      ,S.IdLpnCode
      ,L.SealNumber
      ,I.ItemCode AS SkuProveedor
      ,I.Description
      ,SUBSTRING(I.Description,1,30) AS ItemDescription
      ,SUBSTRING(I.Description,31,60) AS ItemDescription2
      ,IC.ItemCodeCustomer AS SkuCliente
      ,I.ShortItemName AS ItemName
      ,C.CustomerName AS NombreCliente
      ,OO.CustomerCode AS CodigoCliente
      ,C.Address1Fact
      ,OO.DeliveryAddress1
      ,OO.OutboundNumber AS NroDocumentoDespacho
      ,OO.ReferenceNumber AS OrdenCompraCliente
      ,OO.Invoice AS LoteDespacho
      ,IC.DepartmentItem AS Departamento
      ,IC.DepartmentDescription AS Seccion
      ,B.BranchName AS SucursalEntrega
      ,B.BranchCode AS CodigoSucursal
      ,COALESCE(L.LpnParent,S.IdLpnCode) As LpnPadre
      ,CONVERT(INT,SUM(S.ItemQty)) AS ItemQty,
      IC.SpecialField4 AS Rubro
      FROM Stock S
      INNER JOIN Owner O ON S.IdOwn = O.IdOwn
      INNER JOIN LPN L ON L.IdOwn = S.IdOwn
      AND L.IdLpnCode = S.IdLpnCode
      INNER JOIN Item I ON I.IdOwn = S.IdOwn
      AND I.IdItem = S.IdItem
      INNER JOIN OutboundOrder OO ON OO.IdWhs = S.IdWhs
      AND OO.IdOwn = S.IdOwn
      AND OO.IdOutboundOrder = S.IdOutboundOrder
      INNER JOIN Customer C ON C.CustomerCode = OO.CustomerCode
      AND C.IdOwn = OO.IdOwn
      INNER JOIN ItemCustomer IC	ON IC.IdItem = I.IdItem
      AND IC.IdCustomer = C.IdCustomer
      LEFT JOIN Branch B ON B.IdBranch = OO.IdBranch
      ,Company CO
      WHERE S.IdLpnCode = @idLpnCode
      GROUP BY CO.CompanyCode ,CO.CompanyName ,OO.IdOwn, O.OwnName, S.IdLpnCode
      ,L.SealNumber  ,I.ItemCode  ,IC.ItemCodeCustomer  ,I.ShortItemName  ,I.Description
      ,C.CustomerName  ,OO.CustomerCode  ,C.Address1Fact  ,OO.DeliveryAddress1  ,OO.OutboundNumber
      ,OO.ReferenceNumber,IC.DepartmentItem,IC.DepartmentDescription ,B.BranchName ,B.BranchCode, L.LpnParent,OO.Invoice, IC.SpecialField4
    </sql>
    <parameters>
      <parameter type="String">idLpnCode</parameter>
    </parameters>
  </query>
  
  <!--Etiqueta Despacho Packing List-->
  <query code="LAPOLAR_GetLabelLPNPackingListByIdLpn">
    <sql>
      SELECT
      '' AS ItemCode,
      '' AS ItemName,
      0 AS ItemQty,
      @idLpnCode AS IdLpnCode
    </sql>
    <parameters>
      <parameter type="String">idLpnCode</parameter>
    </parameters>
  </query>

  <!--FIN LA POLAR B2B -->

  <!-- HITES B2B -->
  <!--Etiqueta Despacho-->
  <query code="HITES_GetLabelLPNDispachByIdLpn">
    <sql>
      SELECT
      CO.CompanyCode AS RutPreoveedor
      ,CO.CompanyName AS RazonSocialProveedor
      ,OO.IdOwn
      ,S.IdLpnCode
      ,L.SealNumber
      ,I.ItemCode AS SkuProveedor
      ,I.Description AS ItemDescription
      ,IC.ItemCodeCustomer AS SkuCliente
      ,I.ShortItemName AS ItemName
      ,I.Description AS ItemDescription
      ,C.CustomerName AS NombreCliente
      ,OO.CustomerCode AS CodigoCliente
      ,C.Address1Fact
      ,OO.DeliveryAddress1
      ,RD.ReferenceDocNumber AS NroDocumentoDespacho
      ,OO.ReferenceNumber AS OrdenCompraCliente
      ,B.BranchName AS NombreSucursal
      ,B.BranchCode AS CodSucursal
      ,B.BranchAddress As DireccionSucursal
      ,COALESCE(L.LpnParent,S.IdLpnCode) As LpnPadre
      ,CONVERT(INT,SUM(S.ItemQty)) AS ItemQty
	  ,OO.Invoice as NroCita
      FROM Stock S
      INNER JOIN LPN L ON L.IdOwn = S.IdOwn
      AND L.IdLpnCode = S.IdLpnCode
      INNER JOIN Item I ON I.IdOwn = S.IdOwn
      AND I.IdItem = S.IdItem
      INNER JOIN OutboundOrder OO ON OO.IdWhs = S.IdWhs
      AND OO.IdOwn = S.IdOwn
      AND OO.IdOutboundOrder = S.IdOutboundOrder
      INNER JOIN Customer C ON C.CustomerCode = OO.CustomerCode
      AND C.IdOwn = OO.IdOwn
      INNER JOIN ItemCustomer IC	ON IC.IdItem = I.IdItem
      AND IC.IdCustomer = C.IdCustomer
      LEFT JOIN Branch B ON B.IdBranch = OO.IdBranch
		INNER JOIN ReferenceDoc RD On RD.IdOwn = OO.IdOwn and RD.IdOutboundOrder = OO.IdOutboundOrder
      ,Company CO
      WHERE S.IdLpnCode = @idLpnCode
      GROUP BY  CO.CompanyCode,CO.CompanyName
      ,OO.IdOwn ,S.IdLpnCode ,L.SealNumber ,I.ItemCode ,I.Description ,IC.ItemCodeCustomer ,I.ShortItemName
      ,I.Description ,C.CustomerName  ,OO.CustomerCode ,C.Address1Fact  ,OO.DeliveryAddress1
      ,RD.ReferenceDocNumber ,OO.ReferenceNumber ,B.BranchName ,B.BranchCode,B.BranchAddress,L.LpnParent,OO.Invoice 
    </sql>
    <parameters>
      <parameter type="String">idLpnCode</parameter>
    </parameters>
  </query>
  
    <!--Etiqueta Despacho Packing List-->
  <query code="HITES_GetLabelLPNPackingListByIdLpn">
    <sql>
      SELECT
      '' AS ItemCode,
      '' AS ItemName,
      0 AS ItemQty,
      @idLpnCode AS IdLpnCode
    </sql>
    <parameters>
      <parameter type="String">idLpnCode</parameter>
    </parameters>
  </query>
  
  <!--FIN HITES B2B -->


  <!-- SANTA ISABEL & JUMBO B2B -->
  <!--Etiqueta Despacho-->
  <query code="SANTAISABEL_GetLabelLPNDispachByIdLpn">
    <sql>
      SELECT   CO.CompanyCode AS RutProveedor
      ,CO.CompanyName AS RazonSocialProveedor
      ,B.BranchCode AS CodigoSucursal
      ,B.BranchName AS NombreSucursal
      ,L.SealNumber
      ,L.IdLpnCode
      ,B.BranchAddress AS CustomerName
      ,LT.LpnTypeCode
      ,RD.ReferenceDocNumber AS NroDocumentoDespacho
      ,OO.ReferenceNumber AS OrdenCompraCliente
      ,OO.DeliveryAddress1
      ,CONVERT(varchar,RD.InvoiceDate,103) AS FechaDespacho
      ,(SELECT COUNT(DISTINCT DD.IdLpnCode) FROM DispatchDetail DD
      INNER JOIN Dispatch D ON D.IdDispatch = DD.IdDispatch AND DD.IdWmsProcessCode IN ('PICK','PACK','LOAD','SORT')
      INNER JOIN LPN L ON L.IdLpnCode = DD.IdLpnCode
      WHERE D.IdOutboundOrder = OO.IdOutboundOrder) AS TotalBultosDespachar
      -- , (SELECT COUNT(TL.ParamString) + 1
      -- FROM Customer C INNER JOIN
      -- CustomerB2B CB2B ON C.IdCustomer = CB2B.IdCustomer INNER JOIN
      -- Label LB ON CB2B.LabelCodeLPN = LB.LabelCode INNER JOIN
      -- TaskLabel TL ON LB.IdLabel = TL.IdLabel  AND TL.IsPrinted = 0
      -- AND (TL.ParamString @outboundNumber AND TL.ParamString NOT @idLpnCode2)) AS NroDeBulto
	  ,DD.Row AS NroDeBulto
      ,B.SpecialField1 AS BloqueEntrega
      ,B.SpecialField1 AS VentanaEntrega
      ,COALESCE(L.LpnParent,L.IdLpnCode) As LpnPadre
      ,OO.OutboundNumber
	  ,OO.Invoice as NroCita
      FROM OutboundOrder OO
      INNER JOIN Customer C ON C.CustomerCode = OO.CustomerCode And C.IdOwn = OO.IdOwn -- 2018-06-04 Incorporador para filtrar los clientes que corresponden al OWNER
      LEFT JOIN Branch B ON B.IdBranch = OO.IdBranch
      INNER JOIN Dispatch D ON D.IdOutboundOrder = OO.IdOutboundOrder
      INNER JOIN (Select  ROW_Number() OVER (ORDER BY IdLpnCode ASC) AS Row,* from DispatchDetail 
	  where IdWmsProcessCode IN ('SORT') AND IdDispatch in (Select IdDispatch from Dispatch Where IdOutboundOrder in (select IdOutboundOrder from Stock where IdLpnCode = @idLpnCode))) DD ON D.IdDispatch = DD.IdDispatch
      INNER JOIN LPN L ON L.IdLpnCode = DD.IdLpnCode
      INNER JOIN LPNType  LT ON L.IdLpnType = LT.IdLpnType
      LEFT JOIN ReferenceDoc RD On RD.IdWhs = OO.IdWhs And RD.IdOwn = OO.IdOwn AND RD.IdOutboundOrder = OO.IdOutboundOrder
      ,Company CO
      WHERE  L.IdLpnCode = @idLpnCode
    </sql>
    <parameters>
      <parameter type="StringLike">outboundNumber</parameter>
      <parameter type="String">idLpnCode</parameter>
      <parameter type="StringLike">idLpnCode2</parameter>
    </parameters>
  </query>
  <!--FIN SANTA ISABEL & JUMBO B2B -->
  
    <!--Etiqueta Despacho Packing List-->
    <query code="SANTAISABEL_GetLabelLPNPackingListByIdLpn">
      <sql>
          SELECT 
				I.ItemCode,		
				I.PLU AS ItemPLU,
				I.BarCode AS ItemBarCode,
				I.ItemName,
				CAST(DD.ItemQty AS INTEGER) AS ItemQty,
				CAST(I.ConversionFactor AS INTEGER) AS ItemCAP,
				CAST(ROUND((DD.ItemQty / I.ConversionFactor),0) AS INTEGER)AS ItemCAJ,	
				CAST(TI.TotalItems AS INTEGER) AS TotalItems,
				CAST(TI.TotalCajas AS INTEGER) AS TotalCajas,
				OO.OutboundNumber,
				OO.ReferenceNumber AS OrdenCompra,
				RD.ReferenceDocNumber AS Factura,
				(C.CustomerCode + ' ' + C.CustomerName) AS Cliente,
				C.Address1Fact AS DireccionCliente,
				(B.BranchCode + ' - ' + B.BranchName) AS Local,
				B.BranchCode AS CodigoLocal,
				B.BranchName AS NombreLocal,
				B.BranchAddress AS DireccionLocal,
				--(SELECT SUM(CAST(DD1.ItemQty / IU1.ConversionFactor AS INTEGER)) X
				--	FROM DispatchDetail DD1  INNER JOIN
				--		ItemUOM IU1 ON IU1.IdItem = DD1.IdItem 
				--	WHERE DD1.IdDispatch =  D.IdDispatch 
				--	AND IU1.UomName = 'Caja') AS TotalBultosDespachar,
				(CAST(DROW.Row AS VARCHAR) + CHAR(47) +  CAST((SELECT COUNT(Distinct IdLpnCode) 
				FROM DispatchDetail DD1 
				WHERE DD1.IdDispatch = D.IdDispatch) AS VARCHAR))AS CANTBULTOS,
				DD.IdLpnCode
		FROM Dispatch D INNER JOIN
				OutboundOrder OO ON D.IdOutboundOrder = OO.IdOutboundOrder INNER JOIN
				DispatchDetail DD ON D.IdDispatch = DD.IdDispatch INNER JOIN
				Customer C ON OO.CustomerCode = C.CustomerCode AND OO.IdOwn = C.IdOwn INNER JOIN 
				CustomerB2B CB2B ON C.IdCustomer = CB2B.IdCustomer LEFT JOIN
				Branch B ON B.IdBranch = OO.IdBranch INNER JOIN
				(SELECT I.IdItem,
					I.ItemCode,
					IC.ItemCodeCustomer AS PLU,
					IC.LongItemName AS ItemName,
					IU.ConversionFactor,
					IC.BarCode,
					IC.IdCustomer, 
					IC.Price,
					UT.UomName,
					IC.IdOwn
				FROM Item I INNER JOIN
					ItemUom IU ON I.IdItem = IU.IdItem INNER JOIN
					UomType UT ON IU.IdUomType = UT.IdUomType INNER JOIN
					ItemCustomer IC ON I.IdItem = IC.IdItem)I ON I.IdItem = DD.IdItem 
			AND I.IdCustomer = C.IdCustomer 
			AND I.IdOwn = OO.IdOwn
			AND I.UomName = CB2B.UomTypeLpnCode	LEFT JOIN
			(SELECT ROW_Number() OVER (ORDER BY XX.IdLpnCode ASC) AS Row, 
				XX.IdDispatch,
				XX.IdLpnCode
				FROM (SELECT DISTINCT RDD.IdLpnCode, RD.IdDispatch 
					FROM Dispatch RD INNER JOIN 
					DispatchDetail RDD ON RD.IdDispatch = RDD.IdDispatch
					WHERE RD.IdDispatch IN (SELECT Distinct D.IdDispatch
											FROM Dispatch D INNER JOIN 
												DispatchDetail DD ON D.IdDispatch = DD.IdDispatch
											WHERE DD.IdWmsProcessCode = 'PACK' 
											AND DD.IdLpnCode = @idLpnCode))XX) DROW ON D.IdDispatch = DROW.IdDispatch
			AND DROW.IdLpnCode = DD.IdLpnCode LEFT JOIN
			ReferenceDoc RD On RD.IdWhs = OO.IdWhs 
			AND RD.IdOwn = OO.IdOwn 
			AND RD.IdOutboundOrder = OO.IdOutboundOrder INNER JOIN
			(SELECT D2.IdDispatch,
					SUM(DD2.ItemQty) AS TotalItems,
					SUM(ROUND((DD2.ItemQty / IU2.ConversionFactor),0)) AS TotalCajas
			FROM Dispatch D2 INNER JOIN
					DispatchDetail DD2 ON D2.IdDispatch = DD2.IdDispatch INNER JOIN
					ItemUom IU2 ON DD2.IdItem = IU2.IdItem AND IU2.UomName = 'Caja'
			WHERE D2.IdDispatchType = 2 
			GROUP BY D2.IdDispatch)TI ON D.IdDispatch = TI.IdDispatch

		WHERE IdDispatchType = 2 
		AND DD.IdLpnCode = @idLpnCode
    </sql>
    <parameters>
      <parameter type="String">idLpnCode</parameter>
    </parameters>
    </query>
    <!--FIN ETIQUETA PACKING lIST -->
  
  <!--FIN ETIQUETA DESPACHO-->

  <!-- WALMART B2B -->
  <!--Etiqueta Despacho Packing List-->
  <query code="WALMART_GetLabelLPNPackingListByIdLpn">
    <sql>
      SELECT
      ItemCode,
      ItemEAN as ItemEAN,
      ('020' + ItemEAN +'37'+ CAST( CAST(ROUND((SUM(ItemQty) / ItemFactor),0) AS integer) AS varchar) )AS ItemBarCode,
      SUM(ItemQty) as ItemQty,
      ItemCodeCustomer,
      FechaEsperada,
      ItemFactor,
      TotalItems,
      TotalCajas,
      SUM(ItemQty)/ItemFactor as ItemCAJ,
      OutboundNumber,
      OrdenCompra,
      Factura,
      CustomerCode,
      Local,
      NombreSucursal,
      CANTBULTOS,
      IdLpnCode

      FROM(
      SELECT
      I.ItemCode,
      DD.IdWmsProcessCode,
      OO.IdOutboundOrder,
      I.ItemCodeCustomer,
      OO.ExpectedDate AS FechaEsperada,
      I.BarCode AS ItemEAN,
      ('020' + I.BarCode +'37'+ CAST( CAST(ROUND((DD.ItemQty / I.ConversionFactor),0) AS integer) AS varchar) )AS ItemBarCode,
      CAST(DD.ItemQty AS INTEGER) AS ItemQty,
      CAST(I.ConversionFactor AS INTEGER) AS ItemFactor,
      CAST(ROUND((DD.ItemQty / I.ConversionFactor),0) AS INTEGER)AS ItemCAJ,
      CAST(TI.TotalItems AS INTEGER) AS TotalItems,
      CAST(TI.TotalCajas AS INTEGER) AS TotalCajas,
      OO.OutboundNumber,
      OO.ReferenceNumber AS OrdenCompra,
      RD.ReferenceDocNumber AS Factura,
      OO.CustomerCode,
      B.BranchCode AS Local,
      ISNULL(B.BranchName, C.CustomerName) AS NombreSucursal,
      (CAST(DROW.Row AS VARCHAR) + CHAR(47) +  CAST((SELECT COUNT(Distinct IdLpnCode)
      FROM DispatchDetail DD1
      WHERE DD1.IdDispatch = D.IdDispatch) AS VARCHAR))AS CANTBULTOS,
      DD.IdLpnCode
      FROM Dispatch D INNER JOIN
      OutboundOrder OO ON D.IdOutboundOrder = OO.IdOutboundOrder INNER JOIN
      DispatchDetail DD ON D.IdDispatch = DD.IdDispatch INNER JOIN
      Customer C ON OO.CustomerCode = C.CustomerCode AND OO.IdOwn = C.IdOwn INNER JOIN
      CustomerB2B CB2B ON C.IdCustomer = CB2B.IdCustomer LEFT JOIN
      Branch B ON B.IdBranch = OO.IdBranch INNER JOIN
      (SELECT I.IdItem,
      I.ItemCode,
      IC.ItemCodeCustomer,
      IC.LongItemName AS ItemName,
      IU.ConversionFactor,
      IC.BarCode,
      IC.IdCustomer,
      IC.Price,
      UT.UomName,
      IC.IdOwn
      FROM Item I INNER JOIN
      ItemUom IU ON I.IdItem = IU.IdItem INNER JOIN
      UomType UT ON IU.IdUomType = UT.IdUomType INNER JOIN
      ItemCustomer IC ON I.IdItem = IC.IdItem)I ON I.IdItem = DD.IdItem
      AND I.IdCustomer = C.IdCustomer
      AND I.IdOwn = OO.IdOwn
      AND I.UomName = CB2B.UomTypeLpnCode	LEFT JOIN
      (SELECT ROW_Number() OVER (ORDER BY XX.IdLpnCode ASC) AS Row,
      XX.IdDispatch,
      XX.IdLpnCode
      FROM (SELECT DISTINCT RDD.IdLpnCode, RD.IdDispatch
      FROM Dispatch RD INNER JOIN
      DispatchDetail RDD ON RD.IdDispatch = RDD.IdDispatch
      WHERE RD.IdDispatch IN (SELECT Distinct D.IdDispatch
      FROM Dispatch D INNER JOIN
      DispatchDetail DD ON D.IdDispatch = DD.IdDispatch
      WHERE DD.IdWmsProcessCode = 'PACK'
      AND DD.IdLpnCode = @idLpnCode))XX) DROW ON D.IdDispatch = DROW.IdDispatch
      AND DROW.IdLpnCode = DD.IdLpnCode LEFT JOIN
      ReferenceDoc RD On RD.IdWhs = OO.IdWhs
      AND RD.IdOwn = OO.IdOwn
      AND RD.IdOutboundOrder = OO.IdOutboundOrder INNER JOIN
      (SELECT D2.IdDispatch,
      SUM(DD2.ItemQty) AS TotalItems,
      SUM(ROUND((DD2.ItemQty / IU2.ConversionFactor),0)) AS TotalCajas
      FROM Dispatch D2 INNER JOIN
      DispatchDetail DD2 ON D2.IdDispatch = DD2.IdDispatch
      INNER JOIN ItemUom IU2 ON DD2.IdItem = IU2.IdItem
      INNER JOIN OutboundOrder OUTB ON D2.IdOutboundOrder = OUTB.IdOutboundOrder
      INNER JOIN Customer CU ON CU.CustomerCode=OUTB.CustomerCode
      inner join itemcustomer itc ON ITC.IdItem = DD2.IdItem
      AND ITC.IdCustomer=CU.IdCustomer
      INNER JOIN CustomerB2B CB ON CB.IdCustomer = ITC.IdCustomer
      AND IU2.UomName = CB.UomTypeLpnCode
      WHERE D2.IdDispatchType = 2
      AND DD2.IdLpnCode = @idLpnCode
      GROUP BY D2.IdDispatch)TI ON D.IdDispatch = TI.IdDispatch

      WHERE IdDispatchType = 2
      AND DD.IdLpnCode = @idLpnCode
      ) t

      GROUP BY
      ItemCode,
      ItemCodeCustomer,
      FechaEsperada,
      ItemFactor,
      Totalitems,
      TotalCajas,
      OutboundNumber,
      OrdenCompra,
      Factura,
      CustomerCode,
      Local,
      NombreSucursal,
      CANTBULTOS,
      IdLpnCode,
      ItemEan

    </sql>
    <parameters>
      <parameter type="String">idLpnCode</parameter>
    </parameters>
  </query>
      <!-- FIN WALMART B2B -->
  
  <!--INICIO ETIQUETA PRECIO-->
  <!-- CORONA B2B -->
  <query code="CORONA_GetLabelForItemCustomer">
    <sql>
      SELECT IC.IdItem,
      IC.ItemCodeCustomer AS SKUCliente,
      IC.LongItemName,
      REPLACE(CONVERT(VARCHAR,CONVERT(Money, IC.Price),1),'.00','') AS Price,
      IC.Status,
      I.ItemCode AS SKUProveedor,
      I.Description,
      '' AS Temporada,   -->FALTA
      '' AS Subsuncion,  -->FALTA
      '' AS Seccion -->FALTA
      FROM Item I INNER JOIN
      ItemCustomer IC ON I.IdItem = IC.IdItem AND
      I.IdOwn = IC.IdOwn INNER JOIN
      Customer C ON IC.IdCustomer = C.IdCustomer AND
      IC.IdOwn = C.IdOwn
      WHERE IC.IdCustomer = @idCustomer
      AND IC.IdOwn = @idOwn
      AND IC.IdItem = @idItem
    </sql>
    <parameters>
      <parameter type="Int">idCustomer</parameter>
      <parameter type="Int">idOwn</parameter>
      <parameter type="Int">idItem</parameter>
    </parameters>
  </query>
  <!-- FIN CORONA B2B -->
  
  <!-- HITES B2B -->
  <query code="HITES_GetLabelForItemCustomer">
    <sql>
      SELECT IC.IdItem,
      I.ItemCode AS SKUProveedor,
      IC.ItemCodeCustomer AS SKUCliente,
      I.Description,
      REPLACE(CONVERT(VARCHAR,CONVERT(Money, IC.Price),1),'.00','') AS PrecioCliente,
      IU.BarCode AS EAN13,
      IU.UomName,
      '' AS Seccion
      FROM Item I INNER JOIN
      ItemCustomer IC ON I.IdItem = IC.IdItem AND 
      I.IdOwn = IC.IdOwn INNER JOIN
      Customer C ON IC.IdCustomer = C.IdCustomer AND 
      IC.IdOwn = C.IdOwn INNER JOIN
      ItemUom IU ON IU.IdItem = I.IdItem AND UPPER(IU.UomName) = 'UNIDAD'
      WHERE IC.IdCustomer = @idCustomer
      AND IC.IdOwn = @idOwn
      AND IC.IdItem = @idItem
    </sql>
    <parameters>
      <parameter type="Int">idCustomer</parameter>
      <parameter type="Int">idOwn</parameter>
      <parameter type="Int">idItem</parameter>
    </parameters>
  </query>
  <!-- FIN HITES B2B -->

  <!-- PARIS B2B -->
  <query code="PARIS_GetLabelForItemCustomer">
    <sql>
      SELECT IC.IdItem,
      I.ItemCode AS SKUProveedor,
      IC.ItemCodeCustomer AS SKUCliente,
      I.Description,
      REPLACE(CONVERT(VARCHAR,CONVERT(Money, IC.Price),1),'.00','') AS PrecioCliente,
      IU.BarCode AS EAN13,
      IU.UomName,
      IC.DepartmentItem AS Departamento,
      IC.SpecialField1 AS Talla,
      IC.SpecialField2 AS Color
      FROM Item I INNER JOIN
      ItemCustomer IC ON I.IdItem = IC.IdItem AND
      I.IdOwn = IC.IdOwn INNER JOIN
      Customer C ON IC.IdCustomer = C.IdCustomer AND
      IC.IdOwn = C.IdOwn INNER JOIN
      ItemUom IU ON IU.IdItem = I.IdItem AND UPPER(IU.UomName) = 'UNIDAD'
      WHERE IC.IdCustomer = @idCustomer
      AND IC.IdOwn = @idOwn
      AND IC.IdItem = @idItem
    </sql>
    <parameters>
      <parameter type="Int">idCustomer</parameter>
      <parameter type="Int">idOwn</parameter>
      <parameter type="Int">idItem</parameter>
    </parameters>
  </query>
  <!-- FIN PARIS B2B -->

  
  <!-- RIPLEY B2B -->
  <query code="RIPLEY_GetLabelForItemCustomer">
    <sql>
      SELECT IC.IdItem,
      I.ItemCode AS SKUProveedor,
      IC.ItemCodeCustomer AS SKUCliente,
      I.Description,
      REPLACE(CONVERT(VARCHAR,CONVERT(Money, IC.Price),1),'.00','') AS PrecioCliente,
      IC.BarCode AS EAN13,
      IU.UomName,
      IC.DepartmentItem AS Departamento,
      IC.DepartmentDescription AS DescripDepto,
      IC.SpecialField1 AS Talla,
      IC.SpecialField2 AS NroLinea,
      IC.SpecialField3 AS CodigoDepto,
      (IC.SpecialField3 + ' ' + IC.DepartmentItem) AS CodigoDeptoDepartamento,
      (IC.SpecialField2 + ' ' + IC.DepartmentDescription) AS NroLineaDescripDepto
      FROM Item I INNER JOIN
      ItemCustomer IC ON I.IdItem = IC.IdItem AND
      I.IdOwn = IC.IdOwn INNER JOIN
      Customer C ON IC.IdCustomer = C.IdCustomer AND
      IC.IdOwn = C.IdOwn INNER JOIN
      ItemUom IU ON IU.IdItem = I.IdItem AND UPPER(IU.UomName) = 'UNIDAD'
      WHERE IC.IdCustomer = @idCustomer
      AND IC.IdOwn = @idOwn
      AND IC.IdItem = @idItem
    </sql>
    <parameters>
      <parameter type="Int">idCustomer</parameter>
      <parameter type="Int">idOwn</parameter>
      <parameter type="Int">idItem</parameter>
    </parameters>
  </query>
  <!-- FIN RIPLEY B2B -->
  
  <!-- LA POLAR B2B -->
  <query code="LAPOLAR_GetLabelForItemCustomer">
    <sql>
      SELECT IC.IdItem,
      I.ItemCode AS SKUProveedor,
      IC.ItemCodeCustomer AS SKUCliente,
      SUBSTRING(IC.LongItemName,1,25) AS Description,
      SUBSTRING(IC.LongItemName,26,50) AS Description2,
      REPLACE(CONVERT(VARCHAR,CONVERT(Money, IC.Price),1),'.00','') AS PrecioCliente,
      IC.BarCode AS EAN13,
      IU.UomName,
      FORMAT(getdate(), 'ddMMyyyy') AS FechaImp,
      IC.DepartmentDescription AS AreaVenta,
      '' AS ArtCliente,
      IC.DepartmentItem AS LocalEntrega
      FROM Item I INNER JOIN
      ItemCustomer IC ON I.IdItem = IC.IdItem AND 
      I.IdOwn = IC.IdOwn INNER JOIN
      Customer C ON IC.IdCustomer = C.IdCustomer AND 
      IC.IdOwn = C.IdOwn INNER JOIN
      ItemUom IU ON IU.IdItem = I.IdItem AND UPPER(IU.UomName) = 'UNIDAD'
      WHERE IC.IdCustomer = @idCustomer
      AND IC.IdOwn = @idOwn
      AND IC.IdItem = @idItem
    </sql>
    <parameters>
      <parameter type="Int">idCustomer</parameter>
      <parameter type="Int">idOwn</parameter>
      <parameter type="Int">idItem</parameter>
    </parameters>
  </query>
  <!-- FIN RIPLEY B2B -->


  <!--FIN ETIQUETA PRECIO-->

<!-- Inicio etiqueta Falabella -->
<query code="GetLabelShipping">
    <sql>
      SELECT
      IdOwn,
      CustomerCode,
      IdLpnCode,
      SealNumber,
      WeightTotal,
      ItemCode,
      ItemName,
      CASE WHEN CCustomerName IS NULL THEN OOCustomerName ELSE CCustomerName END CustomerName,
      CASE WHEN CAddress1Fact IS NULL THEN OODeliveryAddress1 ELSE CAddress1Fact END DeliveryAddress,
      DeliveryCity,
      OutboundNumber,
      BranchName,
      LpnPadre,
      ItemQty
      FROM(
      SELECT
      OO.IdOwn,
      OO.CustomerCode,
      S.IdLpnCode,
      L.SealNumber,
      L.WeightTotal,
      I.ItemCode,
      I.ShortItemName ItemName,
      C.CustomerName CCustomerName,
      OO.CustomerName OOCustomerName,
      C.Address1Fact CAddress1Fact,
      OO.DeliveryAddress1 OODeliveryAddress1,
      CY.CityName DeliveryCity,
      OO.OutboundNumber,
	  OO.Invoice as NroCita,
      B.BranchName,
	    IC.ItemCodeCustomer,
      COALESCE(L.LpnParent,S.IdLpnCode) As LpnPadre,
      SUM(S.ItemQty)ItemQty
      FROM Stock S INNER JOIN LPN L  ON L.IdOwn = S.IdOwn AND L.IdLpnCode = S.IdLpnCode
      INNER JOIN Item I ON I.IdOwn = S.IdOwn AND I.IdItem = S.IdItem
      INNER JOIN OutboundOrder OO ON OO.IdWhs = S.IdWhs AND OO.IdOwn = S.IdOwn AND OO.IdOutboundOrder = S.IdOutboundOrder
      LEFT JOIN Customer C ON C.CustomerCode = OO.CustomerCode AND C.IdOwn = OO.IdOwn
      LEFT JOIN City CY ON OO.IdCityDelivery = CY.IdCity
      LEFT JOIN Branch B On B.IdBranch = OO.IdBranch and B.IdOwn = OO.IdOwn
	  LEFT JOIN ItemCustomer IC On IC.IdOwn = OO.IdOwn And IC.IdCustomer = C.IdCustomer And IC.IdItem = S.IdItem
      WHERE S.IdLpnCode = @idLpnCode
      GROUP BY OO.IdOwn,OO.CustomerCode,S.IdLpnCode,L.SealNumber,L.WeightTotal,I.ItemCode,I.ShortItemName,C.CustomerName,OO.CustomerName, C.Address1Fact,OO.DeliveryAddress1, CY.CityName,OO.Invoice, OO.OutboundNumber,B.BranchName,IC.ItemCodeCustomer,L.LpnParent
      )AS LabelShipping
      ORDER BY ItemName
    </sql>
    <parameters>
      <parameter type="String">idLpnCode</parameter>
    </parameters>
  </query>

<!-- Fin etiqueta falabella -->
  <!--Cliente CENCOSUD-->

  <query code="SHIPHUCENCOSUD_GetLabelByIdLpn">
    <sql>
      SELECT DISTINCT CO.CompanyCode AS RutProveedor
      ,CO.CompanyName AS RazonSocialProveedor
      ,B.BranchCode AS CodigoSucursal
      ,B.BranchName AS NombreSucursal
      ,L.SealNumber AS HU
      ,L.IdLpnCode
      ,B.BranchAddress AS CustomerName
      ,RD.ReferenceDocNumber AS NroDocumentoDespacho
      ,OO.ReferenceNumber AS OrdenCompraCliente
      ,OO.DeliveryAddress1
      ,CONVERT(varchar,OO.ExpectedDate,103) AS FechaEntrega
      ,(SELECT TOP 1 IC.DepartmentItem
	        FROM ItemCustomer IC 
	        WHERE S.IdItem = IC.IdItem
	        AND C.IdCustomer = IC.IdCustomer) AS BloqueEntrega
      ,B.SpecialField2 AS VentanaEntrega
      ,OO.OutboundNumber
      ,OO.Invoice AS NroCita
      FROM LPN L
      INNER JOIN Stock S ON L.IdLpnCode = S.IdLpnCode
      AND L.IdOwn = S.IdOwn
      INNER JOIN OutboundOrder OO ON OO.IdOutboundOrder = S.IdOutboundOrder
      AND S.IdOwn = OO.IdOwn
      INNER JOIN Customer C ON C.CustomerCode = OO.CustomerCode
      And C.IdOwn = OO.IdOwn
      LEFT JOIN Branch B ON B.IdBranch = OO.IdBranch
      LEFT JOIN ReferenceDoc RD On RD.IdWhs = OO.IdWhs
      AND RD.IdOwn = OO.IdOwn
      AND RD.IdOutboundOrder = OO.IdOutboundOrder
      ,Company CO
      WHERE L.IdLpnCode = @idLpnCode
    </sql>
    <parameters>
      <parameter type="String">idLpnCode</parameter>
    </parameters>
  </query>

  <query code="SHIPLPNHUCENCOSUD_GetLabelByIdLpn">
    <sql>
      SELECT DISTINCT  CO.CompanyCode AS RutProveedor
      ,CO.CompanyName AS RazonSocialProveedor
      ,B.BranchCode AS CodigoSucursal
      ,B.BranchName AS NombreSucursal
      ,L.SealNumber AS HU
      ,L.IdLpnCode
      ,B.BranchAddress AS CustomerName
      ,RD.ReferenceDocNumber AS NroDocumentoDespacho
      ,OO.ReferenceNumber AS OrdenCompraCliente
      ,OO.DeliveryAddress1
      ,CONVERT(varchar,OO.ExpectedDate,103) AS FechaEntrega
      ,(SELECT TOP 1 IC.DepartmentItem
	      FROM ItemCustomer IC 
	      WHERE S.IdItem = IC.IdItem
	      AND C.IdCustomer = IC.IdCustomer) AS BloqueEntrega
      ,B.SpecialField2 AS VentanaEntrega
      ,OO.OutboundNumber
      ,OO.Invoice AS NroCita
      FROM LPN L
      INNER JOIN Stock S ON L.IdLpnCode = S.IdLpnCode
      AND L.IdOwn = S.IdOwn
      INNER JOIN OutboundOrder OO ON OO.IdOutboundOrder = S.IdOutboundOrder
      AND S.IdOwn = OO.IdOwn
      INNER JOIN Customer C ON C.CustomerCode = OO.CustomerCode
      AND C.IdOwn = OO.IdOwn
      LEFT JOIN Branch B ON B.IdBranch = OO.IdBranch
      LEFT JOIN ReferenceDoc RD On RD.IdWhs = OO.IdWhs
      AND RD.IdOwn = OO.IdOwn
      AND RD.IdOutboundOrder = OO.IdOutboundOrder
      ,Company CO
      WHERE L.IdLpnCode = @idLpnCode
    </sql>
    <parameters>
      <parameter type="String">idLpnCode</parameter>
    </parameters>
  </query>

  <!-- Fin Cliente Cencosud-->
  
</querys>