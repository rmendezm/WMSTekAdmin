<?xml version="1.0"?>
<!DOCTYPE pools SYSTEM "..\..\dtd\database.dtd">
<!--Decimal | DateTime | Int | String | Boolean | Float | Short | Byte | Long | Binary | SQLPart | Char  -->

<querys>

  <!-- Begin WServiceMessageIfz Section -->
  <query code="WServiceMessageIfz_Insert">
    <sql>
      INSERT INTO WServiceMessage
      (Objeto,
      Ticket,
      ListXml,
      IdObjeto,
      Transferido,
      Procesado,
      DateCreated)
      VALUES
      (@Objeto,
      @Ticket,
      @ListXml,
      @IdObjeto,
      @Transferido,
      @Procesado,
      @DateCreated)
    </sql>
    <parameters>
      <parameter type="String">Objeto</parameter>
      <parameter type="Int">Ticket</parameter>
      <parameter type="XML">ListXml</parameter>
      <parameter type="Int">IdObjeto</parameter>
      <parameter type="Boolean">Transferido</parameter>
      <parameter type="Boolean">Procesado</parameter>  
      <parameter type="DateTime">DateCreated</parameter>
      <parameter type="DateTime">DateConfirmTicket</parameter>
    </parameters>
  </query>

  <query code="WServiceMessageIfz_GetMaxNroTicket">
    <sql>
      SELECT MAX(Ticket) AS Ticket
      FROM WServiceMessage
    </sql>
  </query>

  <query code="WServiceMessageIfz_GetByAnyParameter">
    <sql>
      SELECT Id
      ,Objeto
      ,Ticket
      ,ListXml
      ,Transferido
      ,Procesado
      ,IdObjeto
      ,Error
      FROM WServiceMessage
      WHERE 1 = 1
      @SQLPart;
    </sql>
    <parameters>
      <parameter type="SQLPart">@SQLPart</parameter>
    </parameters>
    <filters>
      <filter name="Id" type="numericEqual">Id</filter>
      <filter name="Objeto" type="textEqual">Objeto</filter>
      <filter name="Ticket" type="numericEqual">Ticket</filter>
      <filter name="IdObjeto" type="numericEqual">IdObjeto</filter>
      <filter name="DateCreated" type="DateTime">DateCreated</filter>
      <filter name="DateConfirmTicket" type="DateTime">DateConfirmTicket</filter>
    </filters>
  </query>

  <query code="WServiceMessageIfz_UpdateTransfer">
    <sql>
      UPDATE WServiceMessage SET
      Transferido = @Transferido,
      DateConfirmTicket = @DateConfirmTicket
      WHERE Id = @Id
    </sql>
    <parameters>
      <parameter type="Boolean">Transferido</parameter>
      <parameter type="DateTime">DateConfirmTicket</parameter>
      <parameter type="Int">Id</parameter>
    </parameters>
  </query>
  
  <query code="WServiceMessageIfz_UpdateTransferConfirm">
    <sql>
      UPDATE WServiceMessage SET
      Transferido = @Transferido,
      DateConfirmTicket = @DateConfirmTicket
      WHERE Ticket = @Ticket
    </sql>
    <parameters>
      <parameter type="Boolean">Transferido</parameter>
      <parameter type="DateTime">DateConfirmTicket</parameter>
      <parameter type="Int">Ticket</parameter>
    </parameters>
  </query>

  <query code="WServiceMessageIfz_UpdateProcess">
    <sql>
      UPDATE WServiceMessage SET
      Procesado = @Procesado
      WHERE Id = @Id
    </sql>
    <parameters>
      <parameter type="Boolean">Procesado</parameter>
      <parameter type="Int">Id</parameter>
    </parameters>
  </query>
  

  <!-- End WServiceMessageIfz Section -->


  <!-- Begin ReceiptIfz Section -->
  
  <query code="GetReceiptIfzUnProcessedWithPagination">
    <sql>
      SELECT TOP (@pagination)
      IdReceipt
      ,WhsCode
      ,OwnCode
      ,InboundNumber
      ,ReceiptDate
      ,Status
      ,ReceiptTypeCode
      ,ReferenceDoc
      ,ReferenceDocTypeCode
      ,VendorCode
      ,CarrierCode
      ,TruckCode
      ,DriverCode
      ,ShiftNumber
      ,UserWms
      ,SpecialField1
      ,SpecialField2
      ,SpecialField3
      ,SpecialField4
      ,StateInterface
      ,DateCreatedWMS
      ,DateReadERP
      ,IOSpecialField1
      ,IOSpecialField2
      ,IOSpecialField3
      ,IOSpecialField4
      FROM Receipt
      WHERE StateInterface = 'C'
      AND COALESCE(SpecialField1, '') &lt; &gt; 'NO_RECEIPTED_ITEMS'
      @SQLPart
    </sql>
    <parameters>
      <parameter type="Int">pagination</parameter>
      <parameter type="SQLPart">@SQLPart</parameter>
    </parameters>
    <filters>
      <filter name="Owner" type="textIn">OwnCode</filter>
    </filters>
  </query>
  
  <query code="ReceiptIfz_UpdateConfirm">
    <sql>
      UPDATE Receipt
      SET StateInterface  = @stateInterface
      WHERE IdReceipt IN (select IdObjeto from WServiceMessage where Ticket = @nroTicket)
    </sql>
    <parameters>
      <parameter type="String">stateInterface</parameter>
      <parameter type="Int">nroTicket</parameter>
    </parameters>
  </query>
  
  <!-- End ReceiptIfz Section -->

  <!-- Begin ReceiptDetailIfz Section -->
  <query code="GetReceiptDetailIfzByIdReceipt">
    <sql>
      SELECT IdReceiptDetail
      ,IdReceipt
      ,LineNumber
      ,ItemCode
      ,CtgCode
      ,LotNumber
      ,FifoDate
      ,ExpirationDate
      ,FabricationDate
      ,ItemQty
      ,IdLpnCode
      ,Price
      ,GrpClass1
      ,GrpClass2
      ,GrpClass3
      ,GrpClass4
      ,GrpClass5
      ,GrpClass6
      ,GrpClass7
      ,GrpClass8
      ,SpecialField1
      ,SpecialField2
      ,SpecialField3
      ,SpecialField4
      ,LpnWeightTotal
      ,LpnVolumeTotal
      FROM ReceiptDetail
      WHERE IdReceipt = @IdReceipt
    </sql>
    <parameters>
      <parameter type="Int">IdReceipt</parameter>
    </parameters>
  </query>
  <!-- End ReceiptDetailIfz Section -->

  
  <!-- Begin DispatchIfz Section -->

  <query code="GetDispatchIfzUnProcessedWithPagination">
    <sql>
      SELECT TOP (@pagination)
      IdDispatch
      ,WhsCode
      ,OwnCode
      ,OutboundNumber
      ,OutboundTypeCode
      ,ReferenceDoc
      ,ReferenceDocTypeCode
      ,CustomerCode
      ,BranchCode
      ,UserWms
      ,SpecialField1
      ,SpecialField2
      ,SpecialField3
      ,SpecialField4
      ,StateInterface
      ,DateCreatedWMS
      ,DateReadERP
      ,TruckCode
      ,CarrierName
      ,CarrierCode
      ,TypeCode
      ,DriverCode
      ,DriverName
      ,OOSpecialField1
      ,OOSpecialField2
      ,OOSpecialField3
      ,OOSpecialField4
      FROM Dispatch
      WHERE StateInterface = 'C'
      @SQLPart
    </sql>
    <parameters>
      <parameter type="Int">pagination</parameter>
      <parameter type="SQLPart">@SQLPart</parameter>
    </parameters>
    <filters>
      <filter name="Owner" type="textIn">OwnCode</filter>
    </filters>
  </query>
  
  <query code="DispatchIfz_UpdateConfirm">
    <sql>
      UPDATE Dispatch
      SET StateInterface  = @stateInterface
      WHERE IdDispatch IN (select IdObjeto from WServiceMessage where Ticket = @nroTicket)
    </sql>
    <parameters>
      <parameter type="String">stateInterface</parameter>
      <parameter type="Int">nroTicket</parameter>
    </parameters>
  </query>

  <!-- End ReceiptIfz Section -->


  <!-- Begin DispatchDetailIfz Section -->
  <query code="GetDispatchDetailIfzByIdDispatch">
    <sql>
		SELECT IdDispatchDetail
		,IdDispatch
		,LineNumber
		,ItemCode
		,CtgCode
		,LotNumber
		,FifoDate
		,ExpirationDate
		,FabricationDate
		,ItemQty
		,Status
		,IdLpnCode
		,Price
		,GrpClass1
		,GrpClass2
		,GrpClass3
		,GrpClass4
		,GrpClass5
		,GrpClass6
		,GrpClass7
		,GrpClass8
		,SpecialField1
		,SpecialField2
		,SpecialField3
		,SpecialField4
		,SealNumber
		,LpnTypeCode
		,IdLpnCodeContainer
		,LpnTypeCodeContainer,
		LpnWeightTotal,
		LpnVolumeTotal,
		TotalWeight
		FROM DispatchDetail
		WHERE IdDispatch = @IdDispatch
	</sql>
    <parameters>
      <parameter type="Int">IdDispatch</parameter>
    </parameters>
  </query>
  <!-- End DispatchDetailIfz Section -->

  <!-- Begin MovementAdjustIfz Section -->
  <query code="GetMovementAdjustIfzUnProcessedWithPagination">
    <sql>
      SELECT TOP (@pagination)
      IdMovementAdjust
      ,IdMovementType
      ,AdjustDate
      ,UserName
      ,WhsCode
      ,OwnCode
      ,IdLocCode
      ,IdLpnCode
      ,ItemCode
      ,UomCode
      ,BarCode
      ,CtgCode
      ,LotNumber
      ,FifoDate
      ,ExpirationDate
      ,FabricationDate
      ,ItemQty
      ,ReasonCode
      ,HoldCode
      ,SpecialField1
      ,SpecialField2
      ,SpecialField3
      ,SpecialField4
      ,StateInterface
      ,DateCreatedWMS
      ,DateReadERP
      ,IdDocument
      FROM MovementAdjust
      WHERE StateInterface = 'C'
      @SQLPart
    </sql>
    <parameters>
      <parameter type="Int">pagination</parameter>
      <parameter type="SQLPart">@SQLPart</parameter>
    </parameters>
    <filters>
      <filter name="Owner" type="textIn">OwnCode</filter>
    </filters>
  </query>
  
  <query code="MovementIfz_UpdateConfirm">
    <sql>
      UPDATE MovementAdjust
      SET StateInterface  = @stateInterface
      WHERE IdMovementAdjust IN (select IdObjeto from WServiceMessage where Ticket = @nroTicket)
    </sql>
    <parameters>
      <parameter type="String">stateInterface</parameter>
      <parameter type="Int">nroTicket</parameter>
    </parameters>
  </query>
  <!-- End MovementAdjustIfz Section -->

  <!-- Begin BillingLogIfz Section -->
  <query code="GetBillingLogIfzUnProcessedWithPagination">
    <sql>
      SELECT TOP (@pagination)
      IdBillingLog
      ,OwnCode
      ,WhsCode
      ,BillingContractDescription
      ,BillingTransactionName
      ,BillingTransactionAddName
      ,BillingTransactionType
      ,BillingTypeContractValue
      ,BillingTypeName
      ,BillingMoneyValue
      ,Qty
      ,DocumentInOut
      ,DocumentType
      ,DocumentNumber
      ,ReferenceDocNumber
      ,UserName
      ,DateEntry
      ,Invoiced
      ,ItemCode
      ,IdLpnCode
      ,SpecialField1
      ,SpecialField2
      ,SpecialField3
      ,SpecialField4
      ,StateInterface
      ,DateCreatedWMS
      ,DateReadERP
      FROM BillingLog
      WHERE StateInterface = 'C'
      @SQLPart
    </sql>
    <parameters>
      <parameter type="Int">pagination</parameter>
      <parameter type="SQLPart">@SQLPart</parameter>
    </parameters>
    <filters>
      <filter name="Owner" type="textIn">OwnCode</filter>
    </filters>
  </query>
  
  <query code="BillingLogIfz_UpdateConfirm">
    <sql>
      UPDATE BillingLog
      SET StateInterface  = @stateInterface
      WHERE IdBillingLog IN (select IdObjeto from WServiceMessage where Ticket = @nroTicket)
    </sql>
    <parameters>
      <parameter type="String">stateInterface</parameter>
      <parameter type="Int">nroTicket</parameter>
    </parameters>
  </query>
  <!-- End BillinglogIfz Section -->
  
  <!-- Begin TaskDetailIfz Section -->
  <query code="GetUnProcessedByLastIdTask">
    <sql>
      SELECT  
              IdTaskDetail,
	            IdWhs,
	            IdTask,
	            IsComplete,
	            IdDocumentBound,
	            IdDetailBound,
	            LineNumber,
	            OutboundNumber,
	            IdItem,
	            ItemCode,
	            ShortItemName,
	            BarCode,
	            IdCtgItem,
	            Priority,
	            IdLocSourceProposal,
	            IdLocForkLiftProposal,
	            IdLocTargetProposal,
	            IdLocSourceUsed,
	            IdLocForkLiftUsed,
	            IdLocTargetUsed,
	            IdLpnSourceProposal,
	            IdLpnTargetProposal,
	            IdLpnTargetUsed,
	            IdLpnSourceUsed,
	            Status,
	            ProposalQty,
	            RealQty,
	            IdPlanedProcess,
	            WaveCode,
	            LabelCode,
	            LoadCode,
	            LoadSeq,
	            UserAssigned,
	            SerialNumber,
	            StartDate,
	            EndDate,
	            MadeCrossDock,
	            DateCreated,
	            UserCreated,
	            DateModified,
	            UserModified,
	            FifoDate,
	            ExpirationDate,
	            FabricationDate,
	            LotNumber
         FROM TaskDetail
        WHERE StateInterface = 'C'
	AND IdPlanedProcess = @QtyTaskDetailToRet
            <!-- AND IdTask = (SELECT MAX(IdTask) -->
            <!-- FROM TaskDetail                           -->
            <!-- WHERE StateInterface = 'C')           -->
    </sql>
    <parameters>
      	<parameter type="Int">qtyTaskDetailToRet</parameter>
    </parameters>
  </query>

  <query code="TaskDetailIfz_UpdateTaskDetailStateAsExportedByIdTask">
    <sql>
      UPDATE TaskDetail
         SET StateInterface = @StateInterface,
             UserModified = @UserModified,
             DateModified = @DateModified
       WHERE IdTask = @IdTask
    </sql>
    <parameters>
      <parameter type="String">StateInterface</parameter>
      <parameter type="String">UserModified</parameter>
      <parameter type="DateTime">DateModified</parameter>
      <parameter type="Int">IdTask</parameter>
    </parameters>
  </query>
  <!-- End TaskDetailIfz Section -->
  
  <!-- Begin CfgUserWmsIfz Section -->
  <query code="GetCfgUserWmsIfzUnProcessedWithPagination">
    <sql>
      SELECT  TOP (@pagination)
              IdUserWms,
	            FirstName,
	            LastName,
	            IsBaseUser,
	            UserName,
	            Password,
	            UserInternalCode,
	            WorkPhone,
	            MobilePhone,
	            HousePhone,
	            Email,
	            IdForeman,
	            IdLanguage,
	            CodStatus,
	            Comment,
	            DateCreated,
	            UserCreated,
	            DateModified,
	            UserModified
         FROM CfgUserWms
        WHERE StateInterface = 'C'
    </sql>
    <parameters>
      <parameter type="Int">pagination</parameter>
    </parameters>
  </query>
  <!-- End CfgUserWmsIfz Section -->
  
  <query code="GetSecuencialByTableName">
    <sql>
      SELECT COALESCE(MAX(ColumnName),1) as ColumnName
        FROM TableName WITH(NOLOCK)
    </sql>
    <parameters>
    </parameters>
  </query>
  
  <query code="TaskLabel_GetNotPrintedLabels">
		<sql>
			SELECT 
                  TOP  (@pagination)
                  TL.IdTaskLabel, 
                  TL.IdLabel, 
				  TL.DateCreated, 
                  TL.IdUserPrinted, 
				  TL.IdPrinter, 
				  TL.IsPrinted, 
                  TL.ParamString,
				  TL.DelayPrinted, 
                  L.LabelCode, 
                  L.LabelName, 
                  L.IdPrinterType,  
                  L.PathTemplate, 
                  P.PrinterName, 
                  P.IdWhs, 	  
                  PS.ServerName, 
                  PS.ServiceName, 
                  PS.IpAddress, 
                  PS.IpPort, 
                  PS.TimeoutPrint, 
                  PS.IntervalPrint, 
                  PT.PrinterTypeName, 
                  U.UserName,
				  W.WhsCode
             FROM TaskLabel TL 
             JOIN Label L 
			   ON TL.IdLabel = L.IdLabel 
             JOIN PrinterType PT 
			   ON PT.IdPrinterType = L.IdPrinterType 
             JOIN Printer P 
			   ON P.IdPrinter = TL.IdPrinter 
             JOIN Warehouse W 
			   ON W.IdWhs = P.IdWhs 
             JOIN CfgUserWms U 
			   ON U.IdUserWms = TL.IdUserPrinted 
             JOIN PrintServerPrinter PSP 
			   ON PSP.IdPrinter = P.IdPrinter 
             JOIN PrintServer PS 
			   ON PS.IdPrintServer = PSP.IdPrintServer 
            WHERE TL.Isprinted = 0 
			      @SQLPart
		</sql>
		<parameters>
			<parameter type="Int">pagination</parameter>
		    <parameter type="SQLPart">@SQLPart</parameter>
		</parameters>
	    <filters>
          <filter name="LabelCode" type="textEqual">L.LabelCode</filter>
		  <filter name="PrinterName" type="textEqual">P.PrinterName</filter>
	      <filter name="WhsCode" type="textEqual">W.WhsCode</filter>
		  <filter name="ServerName" type="textEqual">PS.ServerName</filter>
	      <filter name="ServiceName" type="textEqual">PS.ServiceName</filter>
	      <filter name="IpAddress" type="textEqual">PS.IpAddress</filter>
		  <filter name="UserCode" type="textEqual">U.UserName</filter>
        </filters>
        <sub-querys>
		  <sub-query code="OrderByIdTask">
			  <sql>
				  ORDER BY TL.IdTaskLabel ASC
			  </sql>
			  <parameters>
			  </parameters>
		  </sub-query>
        </sub-querys>
	</query>
	
	<query code="Company_FindAll">
        <sql>
          SELECT
          co.IdCompany,
          co.CompanyCode,
          co.CompanyName,
          co.ShortCompanyName,
          co.TradeName,
          co.Address1,
          co.Address2,
          co.IdCountry,
          cou.CountryName,
          co.IdState,
          st.StateName,
          co.IdCity,
          ci.CityName,
          co.Phone1,
          co.Phone2,
          co.Fax1,
          co.Fax2,
          co.Email,
          co.ZipCode,
          co.RulePutCode,
          co.RulePickCode,
          co.RuleRplCode,
          co.RuleCDockCode,
          co.DateCreated,
          co.UserCreated,
          co.DateModified,
          co.UserModified,
          co.GLN
          FROM	Company co

          INNER JOIN Country cou ON cou.IdCountry = co.IdCountry
          INNER JOIN State st ON st.IdState = co.IdState
          INNER JOIN City	ci ON ci.IdCity = co.IdCity;

        </sql>
        <parameters>
          <parameter type="String">queryName</parameter>
        </parameters>
      </query>
	
    <query code="TaskLabel_Update">
        <sql>
			UPDATE TaskLabel SET
			IsPrinted = 1
			WHERE IdTaskLabel = @idTaskLabel
		</sql>
        <parameters>
            <parameter type="Int">idTaskLabel</parameter>
        </parameters>
    </query>
	
    <query code="SaveMovement">
        <sql>
          INSERT INTO MovementLog
          (IdMovement, IdMovementType, StartTime, EndTime, UserName,IdWhs,DocumentNumber,DocumentType,DocumentLineNumber,
          ReferenceNumber,IdOwn,IdItem,IdUom,IdCtgItem,LotNumber,FifoDate,ExpirationDate,FabricationDate,IdLpnCodeSource,
          IdLpnCodeTarget,LpnParentSource,LpnParentTarget,IdLocCodeProposal,IdLocCodeSource,IdLocCodeTarget,ItemQtyMov,QtyBeforeSource,QtyBeforeTarget,
          ReasonCode,HoldCode,RoutingCode,
          SpecialField1, SpecialField2, SpecialField3, SpecialField4, SpecialField5, SpecialField6, SpecialField7)
          VALUES(
          @IdMovement,
          @IdMovementType,
          @StartTime,
          @EndTime,
          @UserName,
          @IdWhs,
          @DocumentNumber,
          @DocumentType,
          @DocumentLineNumber,
          @ReferenceNumber,
          @IdOwn,
          @IdItem,
          @IdUom,
          @IdCtgItem,
          @LotNumber,
          @FifoDate,
          @ExpirationDate,
          @FabricationDate,
          @IdLpnCodeSource,
          @IdLpnCodeTarget,
          @LpnParentSource,
          @LpnParentTarget,
          @IdLocCodeProposal,
          @IdLocCodeSource,
          @IdLocCodeTarget,
          @ItemQtyMov,
          @QtyBeforeSource,
          @QtyBeforeTarget,
          @ReasonCode,
          @HoldCode,
          @RoutingCode,
          @SpecialField1,
          @SpecialField2,
          @SpecialField3,
          @SpecialField4,
          @SpecialField5,
          @SpecialField6,
          @SpecialField7)


        </sql>
        <parameters>
          <parameter type="Int">IdMovement</parameter>
          <parameter type="Int">IdMovementType</parameter>
          <parameter type="DateTime">StartTime</parameter>
          <parameter type="DateTime">EndTime</parameter>
          <parameter type="String">UserName</parameter>
          <parameter type="Int">IdWhs</parameter>
          <parameter type="String">DocumentNumber</parameter>
          <parameter type="String">DocumentType</parameter>
          <parameter type="String">DocumentLineNumber</parameter>
          <parameter type="String">ReferenceNumber</parameter>
          <parameter type="Int">IdOwn</parameter>
          <parameter type="Int">IdItem</parameter>
          <parameter type="Int">IdUom</parameter>
          <parameter type="Int">IdCtgItem</parameter>
          <parameter type="String">LotNumber</parameter>
          <parameter type="DateTime">FifoDate</parameter>
          <parameter type="DateTime">ExpirationDate</parameter>
          <parameter type="DateTime">FabricationDate</parameter>
          <parameter type="String">IdLpnCodeSource</parameter>
          <parameter type="String">IdLpnCodeTarget</parameter>
          <parameter type="String">LpnParentSource</parameter>
          <parameter type="String">LpnParentTarget</parameter>
          <parameter type="String">IdLocCodeProposal</parameter>
          <parameter type="String">IdLocCodeSource</parameter>
          <parameter type="String">IdLocCodeTarget</parameter>
          <parameter type="Decimal">ItemQtyMov</parameter>
          <parameter type="Decimal">QtyBeforeSource</parameter>
          <parameter type="Decimal">QtyBeforeTarget</parameter>
          <parameter type="String">ReasonCode</parameter>
          <parameter type="String">HoldCode</parameter>
          <parameter type="String">RoutingCode</parameter>
          <parameter type="String">SpecialField1</parameter>
          <parameter type="String">SpecialField2</parameter>
          <parameter type="String">SpecialField3</parameter>
          <parameter type="String">SpecialField4</parameter>
          <parameter type="String">SpecialField5</parameter>
          <parameter type="String">SpecialField6</parameter>
          <parameter type="String">SpecialField7</parameter>
        </parameters>
      </query>

  <!-- Begin TaskDetailPtlIfz Section -->
  <query code="GetTaskDetailPtlIfzByNroOla">
    <sql>
      SELECT IdTaskDetailPtl
      ,NroOla
      ,CodTipoTransac
      ,IdTask
      ,IdWhs
      ,IdOwn
      ,IsComplete
      ,TaskTypeCode
      ,Description
      ,IdDocumentBound
      ,Priority
      ,CreateDate
      ,CloseDate
      ,ProposalStartDate
      ,ProposalEndDate
      ,RealStartDate
      ,RealEndDate
      ,Status
      ,IdTrackTaskType
      ,DateTrackTask
      ,IdLocStageSource
      ,IdLocStageTarget
      ,WorkersRequired
      ,WorkersAssigned
      ,AllowCrossDock
      ,IdTaskDetail
      ,IsComplete_Det
      ,IdDocumentBound_Det
      ,IdDetailBound
      ,LineNumber
      ,IdItem
      ,IdCtgItem
      ,Priority_Det
      ,IdLocSourceProposal
      ,IdLocForkLiftProposal
      ,IdLocTargetProposal
      ,IdLocSourceUsed
      ,IdLocForkLiftUsed
      ,IdLocTargetUsed
      ,NULL AS IdLpnSourceProposal
      ,IdLpnTargetProposal
      ,IdLpnTargetUsed
      ,NULL AS IdLpnSourceUsed
      ,Status_Det
      ,ProposalQty
      ,RealQty
      ,IdPlanedProcess
      ,WaveCode
      ,LabelCode
      ,LoadCode
      ,LoadSeq
      ,UserAssigned
      ,SerialNumber
      ,StartDate
      ,EndDate
      ,MadeCrossDock
      ,DateCreated
      ,UserCreated
      ,DateModified
      ,UserModified
      ,FifoDate
      ,ExpirationDate
      ,FabricationDate
      ,LotNumber
      ,PtlTypeCode
      ,WhsName
      ,OwnName
      ,Description_Item
      ,CtgName
      ,BarCode
      ,UomName
      ,Length
      ,Width
      ,Height
      ,Volume
      ,Weight
      ,StateInterface
      ,DateCreatedWMS
      ,DateReadIFZ
      FROM TaskDetailPtl
      WHERE NroOla = @NroOla
    </sql>
    <parameters>
      <parameter type="Int">NroOla</parameter>
    </parameters>
  </query>

  <query code="GetTaskDetailPtlIfzByNroOlaAndPtlType">
    <sql>
      SELECT IdTaskDetailPtl
      ,NroOla
      ,CodTipoTransac
      ,IdTask
      ,IdWhs
      ,IdOwn
      ,IsComplete
      ,TaskTypeCode
      ,Description
      ,IdDocumentBound
      ,Priority
      ,CreateDate
      ,CloseDate
      ,ProposalStartDate
      ,ProposalEndDate
      ,RealStartDate
      ,RealEndDate
      ,Status
      ,IdTrackTaskType
      ,DateTrackTask
      ,IdLocStageSource
      ,IdLocStageTarget
      ,WorkersRequired
      ,WorkersAssigned
      ,AllowCrossDock
      ,IdTaskDetail
      ,IsComplete_Det
      ,IdDocumentBound_Det
      ,IdDetailBound
      ,LineNumber
      ,IdItem
      ,IdCtgItem
      ,Priority_Det
      ,IdLocSourceProposal
      ,IdLocForkLiftProposal
      ,IdLocTargetProposal
      ,IdLocSourceUsed
      ,IdLocForkLiftUsed
      ,IdLocTargetUsed
      ,NULL AS IdLpnSourceProposal
      ,IdLpnTargetProposal
      ,IdLpnTargetUsed
      ,NULL AS IdLpnSourceUsed
      ,Status_Det
      ,ProposalQty
      ,RealQty
      ,IdPlanedProcess
      ,WaveCode
      ,LabelCode
      ,LoadCode
      ,LoadSeq
      ,UserAssigned
      ,SerialNumber
      ,StartDate
      ,EndDate
      ,MadeCrossDock
      ,DateCreated
      ,UserCreated
      ,DateModified
      ,UserModified
      ,FifoDate
      ,ExpirationDate
      ,FabricationDate
      ,LotNumber
      ,PtlTypeCode
      ,WhsName
      ,OwnName
      ,Description_Item
      ,CtgName
      ,BarCode
      ,UomName
      ,Length
      ,Width
      ,Height
      ,Volume
      ,Weight
      ,StateInterface
      ,DateCreatedWMS
      ,DateReadIFZ
      FROM TaskDetailPtl
      WHERE NroOla = @NroOla
      AND PtlTypeCode = @PtlTypeCode
    </sql>
    <parameters>
      <parameter type="Int">NroOla</parameter>
      <parameter type="String">PtlTypeCode</parameter>
    </parameters>
  </query>

  <query code="TaskDetailPtlIfz_GetByAnyParameter">
    <sql>
      SELECT IdTaskDetailPtl
      ,NroOla
      ,CodTipoTransac
      ,IdTask
      ,IdWhs
      ,IdOwn
      ,IsComplete
      ,TaskTypeCode
      ,Description
      ,IdDocumentBound
      ,Priority
      ,CreateDate
      ,CloseDate
      ,ProposalStartDate
      ,ProposalEndDate
      ,RealStartDate
      ,RealEndDate
      ,Status
      ,IdTrackTaskType
      ,DateTrackTask
      ,IdLocStageSource
      ,IdLocStageTarget
      ,WorkersRequired
      ,WorkersAssigned
      ,AllowCrossDock
      ,IdTaskDetail
      ,IsComplete_Det
      ,IdDocumentBound_Det
      ,IdDetailBound
      ,LineNumber
      ,IdItem
      ,IdCtgItem
      ,Priority_Det
      ,IdLocSourceProposal
      ,IdLocForkLiftProposal
      ,IdLocTargetProposal
      ,IdLocSourceUsed
      ,IdLocForkLiftUsed
      ,IdLocTargetUsed
      ,NULL AS IdLpnSourceProposal
      ,IdLpnTargetProposal
      ,IdLpnTargetUsed
      ,NULL AS IdLpnSourceUsed
      ,Status_Det
      ,ProposalQty
      ,RealQty
      ,IdPlanedProcess
      ,WaveCode
      ,LabelCode
      ,LoadCode
      ,LoadSeq
      ,UserAssigned
      ,SerialNumber
      ,StartDate
      ,EndDate
      ,MadeCrossDock
      ,DateCreated
      ,UserCreated
      ,DateModified
      ,UserModified
      ,FifoDate
      ,ExpirationDate
      ,FabricationDate
      ,LotNumber
      ,PtlTypeCode
      ,WhsName
      ,OwnName
      ,Description_Item
      ,CtgName
      ,BarCode
      ,UomName
      --,Length
      --,Width
      --,Height
      --,Volume
      --,Weight
      ,CASE WhEN Length = -1 THEN 0 ELSE ISNULL(Length,0) END AS Length,
      CASE WhEN Width  = -1 THEN 0 ELSE ISNULL(Width,0)  END AS Width,
      CASE WhEN Height = -1 THEN 0 ELSE ISNULL(Height,0) END AS Height,
      CASE WhEN Volume = -1 THEN 0 ELSE ISNULL(Volume,0) END AS Volume,
      CASE WhEN Weight = -1 THEN 0 ELSE ISNULL(Weight,0) END AS Weight
      ,StateInterface
      ,DateCreatedWMS
      ,DateReadIFZ
      ,BigTicket
      FROM TaskDetailPtl
      WHERE 1 = 1
      @SQLPart;
    </sql>
    <parameters>
      <parameter type="SQLPart">@SQLPart</parameter>
    </parameters>
    <filters>
      <filter name="IdTaskDetailPtl" type="numericEqual">IdTaskDetailPtl</filter>
      <filter name="NroOla" type="numericEqual">NroOla</filter>
      <filter name="IdWhs" type="numericEqual">IdWhs</filter>
      <filter name="TaskTypeCode" type="textEqual">TaskTypeCode</filter>
      <filter name="PtlTypeCode" type="textEqual">PtlTypeCode</filter>
      <filter name="IdLpnTargetUsed" type="textEqual">IdLpnTargetUsed</filter>
    </filters>
  </query>
  <!--END TaskDetailPtlIfz-->

  <!-- Begin OutboundOrderPtlIfz Section -->
  <query code="GetOutboundOrderPtlIfzByNroOla">
    <sql>
      SELECT OO.IdOutboundOrderPtl
      ,OO.NroOla
      ,OO.CodTipoTransac
      ,OO.IdOutboundOrder
      ,OO.IdWhs
      ,OO.IdOwn
      ,OO.OutboundNumber
      ,OO.IdOutboundType
      ,OO.Status
      ,OO.ReferenceNumber
      ,OO.LoadCode
      ,OO.LoadSeq
      ,OO.Priority
      ,OO.InmediateProcess
      ,OO.EmissionDate
      ,OO.ExpectedDate
      ,OO.ShipmentDate
      ,OO.ExpirationDate
      ,OO.CancelDate
      ,OO.CancelUser
      ,OO.CustomerCode
      ,OO.CustomerName
      ,OO.DeliveryAddress1
      ,OO.DeliveryAddress2
      ,OO.IdCountryDelivery
      ,OO.IdStateDelivery
      ,OO.IdCityDelivery
      ,OO.DeliveryPhone
      ,OO.DeliveryEmail
      ,OO.IdWhsTarget
      ,OO.FullShipment
      ,OO.CarrierCode
      ,OO.RouteCode
      ,OO.Plate
      ,OO.Invoice
      ,OO.FactAddress1
      ,OO.FactAddress2
      ,OO.IdCountryFact
      ,OO.IdStateFact
      ,OO.IdCityFact
      ,OO.FactPhone
      ,OO.FactEmail
      ,OO.AllowCrossDock
      ,OO.AllowBackOrder
      ,OO.IdBranch
      ,OO.SpecialField1
      ,OO.SpecialField2
      ,OO.SpecialField3
      ,OO.SpecialField4
      ,OO.WhsName
      ,OO.OwnName
      ,OO.CountryName
      ,OO.StateName
      ,OO.DateCreated
      ,OO.UserCreated
      ,OO.DateModified
      ,OO.UserModified
      ,OO.StateInterface
      ,OO.DateCreatedWMS
      ,OO.DateReadIFZ
      ,TD.PtlTypeCode
      FROM OutboundOrderPtl OO INNER JOIN
      TaskDetailPtl TD ON OO.IdOutboundOrder = TD.IdDocumentBound
      WHERE OO.NroOla = @NroOla
    </sql>
    <parameters>
      <parameter type="Int">NroOla</parameter>
    </parameters>
  </query>

  <query code="OutboundOrderPtlIfz_GetByFilters">
    <sql>
      SELECT DISTINCT OO.IdOutboundOrderPtl
	  	  --,TD.IdItem
		  ,OO.NroOla
		  ,OO.CodTipoTransac
		  ,OO.IdOutboundOrder
		  ,OO.IdWhs
		  ,OO.IdOwn
		  ,OO.OutboundNumber
		  ,OO.IdOutboundType
		  ,OO.Status
		  ,OO.ReferenceNumber
		  ,OO.LoadCode
		  ,OO.LoadSeq
		  ,OO.Priority
		  ,OO.InmediateProcess
		  ,OO.EmissionDate
		  ,OO.ExpectedDate
		  ,OO.ShipmentDate
		  ,OO.ExpirationDate
		  ,OO.CancelDate
		  ,OO.CancelUser
		  ,OO.CustomerCode
		  ,OO.CustomerName
		  ,OO.DeliveryAddress1
		  ,OO.DeliveryAddress2
		  ,OO.IdCountryDelivery
		  ,OO.IdStateDelivery
		  ,OO.IdCityDelivery
		  ,OO.DeliveryPhone
		  ,OO.DeliveryEmail
		  ,OO.IdWhsTarget
		  ,OO.FullShipment
		  ,OO.CarrierCode
		  ,OO.RouteCode
		  ,OO.Plate
		  ,OO.Invoice
		  ,OO.FactAddress1
		  ,OO.FactAddress2
		  ,OO.IdCountryFact
		  ,OO.IdStateFact
		  ,OO.IdCityFact
		  ,OO.FactPhone
		  ,OO.FactEmail
		  ,OO.AllowCrossDock
		  ,OO.AllowBackOrder
		  ,OO.IdBranch
		  ,OO.SpecialField1
		  ,OO.SpecialField2
		  ,OO.SpecialField3
		  ,OO.SpecialField4
		  ,OO.WhsName
		  ,OO.OwnName
		  ,OO.CountryName
		  ,OO.StateName
		  ,OO.DateCreated
		  ,OO.UserCreated
		  ,OO.DateModified
		  ,OO.UserModified
		  ,OO.StateInterface
		  ,OO.DateCreatedWMS
		  ,OO.DateReadIFZ
		  ,TD.PtlTypeCode
      ,OO.OutboundTypeCode
      ,OO.OutboundTypeName
		  FROM OutboundOrderPtl OO INNER JOIN
		  TaskDetailPtl TD ON OO.IdOutboundOrder = TD.IdDocumentBound_det
		  WHERE TD.TaskTypeCode IN ('PTLECO','PTLCAJ','PTLPAL','PTLCAR')
      @SQLPart;
    </sql>
    <parameters>
      <parameter type="SQLPart">@SQLPart</parameter>
    </parameters>
    <filters>
      <filter name="NroOla" type="numericEqual">OO.NroOla</filter>
      <filter name="IdWhs" type="numericEqual">OO.IdWhs</filter>
      <filter name="PtlTypeCode" type="textEqual">TD.PtlTypeCode</filter>
    </filters>
  </query>
  
  <!--END OutboundOrderPtlIfz-->

  <!-- Begin OutboundDetailPtlIfz Section -->
  <query code="GetOutboundDetailPtlIfzByNroOla">
    <sql>
      SELECT DISTINCT  OD.IdOutboundDetailPTL
		 ,OD.NroOla
		 ,OD.CodTipoTransac
		 ,OD.IdOutboundDetail
		 ,OD.IdOutboundOrder
		 ,OD.LineNumber
		 ,OD.LineCode
		 ,OD.IdItem
		 ,OD.IdCtgItem
		 ,OD.ItemQty
		 ,OD.Status
		 ,OD.LotNumber
		 ,OD.FifoDate
		 ,OD.ExpirationDate
		 ,OD.FabricationDate
		 ,OD.GrpClass1
		 ,OD.GrpClass2
		 ,OD.GrpClass3
		 ,OD.GrpClass4
		 ,OD.GrpClass5
		 ,OD.GrpClass6
		 ,OD.GrpClass7
		 ,OD.GrpClass8
		 ,OD.SpecialField1
		 ,OD.SpecialField2
		 ,OD.SpecialField3
		 ,OD.SpecialField4
		 ,OD.DateCreated
		 ,OD.UserCreated
		 ,OD.DateModified
		 ,OD.UserModified
		 ,OD.StateInterface
		 ,OD.DateCreatedWMS
		 ,OD.DateReadIFZ
		  FROM OutboundDetailPtl OD INNER JOIN
		  TaskDetailPtl TD ON OD.IdOutboundOrder = TD.IdDocumentBound_det
		  AND TD.TaskTypeCode IN ('PTLECO','PTLCAJ','PTLPAL','PTLCAR')
      WHERE OD.NroOla = @NroOla
    </sql>
    <parameters>
      <parameter type="Int">NroOla</parameter>
    </parameters>
  </query>

  <query code="GetOutboundDetailPtlIfzByNroOlaAndIdOrder">
    <sql>
		SELECT DISTINCT  OD.IdOutboundDetailPTL
		,OD.NroOla
		,OD.CodTipoTransac
		,OD.IdOutboundDetail
		,OD.IdOutboundOrder
		,OD.LineNumber
		,OD.LineCode
		,OD.IdItem
		,OD.IdCtgItem
		,OD.ItemQty
		,OD.Status
		,OD.LotNumber
		,OD.FifoDate
		,OD.ExpirationDate
		,OD.FabricationDate
		,OD.GrpClass1
		,OD.GrpClass2
		,OD.GrpClass3
		,OD.GrpClass4
		,OD.GrpClass5
		,OD.GrpClass6
		,OD.GrpClass7
		,OD.GrpClass8
		,OD.SpecialField1
		,OD.SpecialField2
		,OD.SpecialField3
		,OD.SpecialField4
		,OD.DateCreated
		,OD.UserCreated
		,OD.DateModified
		,OD.UserModified
		,OD.StateInterface
		,OD.DateCreatedWMS
		,OD.DateReadIFZ
		FROM OutboundDetailPtl OD INNER JOIN
		TaskDetailPtl TD ON OD.IdOutboundOrder = TD.IdDocumentBound_det
		AND TD.TaskTypeCode IN ('PTLECO','PTLCAJ','PTLPAL','PTLCAR')
		WHERE OD.NroOla = @NroOla
		AND OD.IdOutboundOrder = @IdOutboundOrder
	</sql>
    <parameters>
      <parameter type="Int">NroOla</parameter>
      <parameter type="Int">IdOutboundOrder</parameter>
    </parameters>
  </query>
  <!--END OutboundDetailPtlIfz-->

  <!--BEGIN WaveDispatchlIfz-->
  <query code="WaveDispatchlIfz_FindAll">
    <sql>
      SELECT IdWaveDispatch
      ,IdWhs
      ,IdOwn
      ,WaveNumber
      ,OutboundTypeCode
      ,QtyOutBoundOrder
      ,QtyOutboundDetail
      ,TotItemOutboundDetail
      ,QtyLinePickDetail
      ,TotItemPickDetail
      ,QtyLineSortDetail
      ,TotItemSortDetail
      ,Status
      ,IdTrackWaveType
      ,UserApproval
      ,DateCreated
      ,UserCreated
      ,DateModified
      ,UserModified
      ,StateInterface
      ,DateCreatedWMS
      ,DateReadIFZ
      FROM WaveDispatch
    </sql>
    <parameters>
    </parameters>
  </query>

  <query code="WaveDispatchlIfz_GetByNroOla">
    <sql>
      SELECT IdWaveDispatch
      ,IdWhs
      ,IdOwn
      ,WaveNumber
      ,OutboundTypeCode
      ,QtyOutBoundOrder
      ,QtyOutboundDetail
      ,TotItemOutboundDetail
      ,QtyLinePickDetail
      ,TotItemPickDetail
      ,QtyLineSortDetail
      ,TotItemSortDetail
      ,Status
      ,IdTrackWaveType
      ,UserApproval
      ,DateCreated
      ,UserCreated
      ,DateModified
      ,UserModified
      ,StateInterface
      ,DateCreatedWMS
      ,DateReadIFZ
      FROM WaveDispatch
      WHERE WaveNumber = @WaveNumber
    </sql>
    <parameters>
      <parameter type="Int">WaveNumber</parameter>
    </parameters>
  </query>
  <!--END WaveDispatchlIfz-->

  <query code="TaskDetailPtlIfz_UpdateConfirm">
    <sql>
      UPDATE TaskDetailPtl
      SET StateInterface  = @stateInterface
      WHERE IdTaskDetailPtl IN (SELECT IdObjeto FROM WServiceMessage WHERE Ticket = @nroTicket)
    </sql>
    <parameters>
      <parameter type="String">stateInterface</parameter>
      <parameter type="Int">nroTicket</parameter>
    </parameters>
  </query>

  <query code="OutboundOrderPtlIfz_UpdateConfirm">
    <sql>
      UPDATE OutboundOrderPtl
      SET StateInterface  = @stateInterface
      WHERE IdOutboundOrderPtl IN (SELECT IdObjeto FROM WServiceMessage WHERE Ticket = @nroTicket)
    </sql>
    <parameters>
      <parameter type="String">stateInterface</parameter>
      <parameter type="Int">nroTicket</parameter>
    </parameters>
  </query>

  <query code="WaveDispatchPtlIfz_UpdateConfirm">
    <sql>
      UPDATE WaveDispatch
      SET StateInterface  = @stateInterface
      WHERE IdWaveDispatch IN (SELECT IdObjeto FROM WServiceMessage WHERE Ticket = @nroTicket)
    </sql>
    <parameters>
      <parameter type="String">stateInterface</parameter>
      <parameter type="Int">nroTicket</parameter>
    </parameters>
  </query>


  <query code="CfgUserWmsIfz_UpdateConfirm">
    <sql>
      UPDATE CfgUserWms
      SET StateInterface  = @stateInterface
      WHERE IdUserWms IN (SELECT IdObjeto FROM WServiceMessage WHERE Ticket = @nroTicket)
    </sql>
    <parameters>
      <parameter type="String">stateInterface</parameter>
      <parameter type="Int">nroTicket</parameter>
    </parameters>
  </query>
  
  <query code="MovementIfz_Insert">
    <sql>
      INSERT INTO MovementIfz
      (
      IdMovIfz
      ,SourceUserName
      ,SourceAppName
      ,SourceHostName
      ,IdTicketTransfer
      ,Dateprocess
      ,WebServiceName
      ,TypeMovto
      ,RecordRequestQty
      ,RecordProcessQty
      ,RangeRequest
      ,StatusProcess
      ,StatusMessage
      )
      VALUES
      (
      @IdMovIfz
      ,@SourceUserName
      ,@SourceAppName
      ,@SourceHostName
      ,@IdTicketTransfer
      ,@Dateprocess
      ,@WebServiceName
      ,@TypeMovto
      ,@RecordRequestQty
      ,@RecordProcessQty
      ,@RangeRequest
      ,@StatusProcess
      ,@StatusMessage
      )

    </sql>
    <parameters>
      <parameter type="Int">IdMovIfz</parameter>
      <parameter type="String">SourceUserName</parameter>
      <parameter type="String">SourceAppName</parameter>
      <parameter type="String">SourceHostName</parameter>
      <parameter type="String">IdTicketTransfer</parameter>
      <parameter type="DateTime">Dateprocess</parameter>
      <parameter type="String">WebServiceName</parameter>
      <parameter type="Char">TypeMovto</parameter>
      <parameter type="Int">RecordRequestQty</parameter>
      <parameter type="Int">RecordProcessQty</parameter>
      <parameter type="String">RangeRequest</parameter>
      <parameter type="String">StatusProcess</parameter>
      <parameter type="String">StatusMessage</parameter>
    </parameters>
  </query>


  <query code="User_GetByUsernameAndPassord">
    <sql>
      SELECT  IdUserWms,
      UserName,
      Password,
      FirstName,
      LastName,
      WorkPhone,
      Email,
      IsBaseUser,
      CodStatus,
      l.IdLanguage,
      l.Name AS Language,
      l.CodeBase
      FROM CfgUserWms u
      LEFT JOIN CfgLanguage l ON u.IdLanguage = l.idLanguage
      WHERE UserName = @username AND Password = @password
    </sql>
    <parameters>
      <parameter type="String">username</parameter>
      <parameter type="String">password</parameter>
    </parameters>
  </query>

  <query code="User_findOwners">
    <sql>
      SELECT U.IdOwn
      ,U.IdUserWms
      ,O.OwnCode
      ,O.OwnName
      ,O.TradeName
      ,U.DateCreated
      ,U.UserCreated
      ,U.DefaultOwner
      FROM UserOwner U
      INNER JOIN Owner O ON O.IdOwn = U.IdOwn
      WHERE IdUserWms = @IdUserWms
      ORDER BY O.OwnName
    </sql>
    <parameters>
      <parameter type="Int">IdUserWms</parameter>
    </parameters>
  </query>

  <query code="GetCompanyParamByKey">
    <sql>
      SELECT IP.IdParameter,
      IP.ParameterCode AS ParameterKey,
      IP.ParameterValue,
      IP.IdModule,
      IP.Scope,
      IP.[Type]
      FROM CompanyParameter IP
      WHERE IP.ParameterCode = @parameterKey
    </sql>
    <parameters>
      <parameter type="String">parameterKey</parameter>
    </parameters>
  </query>

  <query code="Role_GetByUser">
    <sql>
      SELECT    r.idRole,
      r.isBaseRole,
      r.name,
      r.description,
      r.codStatus,
      m.IdModule
      FROM	CfgRole r
      JOIN	CfgUserWmsRole ur
      ON r.IdRole = ur.IdRole
      LEFT JOIN CfgRoleModule rm
      ON rm.IdRole = r.IdRole
      LEFT JOIN CfgModule m ON
      m.IdModule = rm.IdModule
      WHERE	ur.IdUserWms = @userId;
    </sql>
    <parameters>
      <parameter type="Int">userId</parameter>
    </parameters>
  </query>


<query code="GetItemById">
    <sql>
      SELECT
      IdItem,
      ItemCode,
      Description,
      IdOwn,
      ShortItemName,
      Status,
      CtrlSerialInbound,
      CtrlSerialInternal,
      CtrlSerialOutbound,
      LotControlInbound,
      LotControlInternal,
      LotControlOutbound,
      Weight,
      Volume,
      Length,
      Width,Height,
      NestedVolume,
      IdPutawayZone,
      ReOrderPoint,
      ReOrderQty,
      PalletQty
      FROM item i
      WHERE IdItem = @idItem
    </sql>
    <parameters>
      <parameter type="Int">idItem</parameter>
    </parameters>
  </query>	
		
			
  <query code="ItemUom_GetByAnyParameter">
    <sql>
		SELECT
		IU.IdUom,
		IU.IdItem,
		IU.UomCode,
		IU.ConversionFactor,
		IU.BarCode,
		IU.IdUomType,
		IU.UomName,
		CASE WhEN IU.Length = -1 THEN 0 ELSE ISNULL(IU.Length,0) END AS Length,
		CASE WhEN IU.Width  = -1 THEN 0 ELSE ISNULL(IU.Width,0)  END AS Width,
		CASE WhEN IU.Height = -1 THEN 0 ELSE ISNULL(IU.Height,0) END AS Height,
		CASE WhEN IU.Volume = -1 THEN 0 ELSE ISNULL(IU.Volume,0) END AS Volume,
		CASE WhEN IU.Weight = -1 THEN 0 ELSE ISNULL(IU.Weight,0) END AS Weight,
		IU.Status,
		CASE WhEN IU.LayoutUomQty  = -1 THEN 0 ELSE ISNULL(IU.LayoutUomQty,0) END AS LayoutUomQty,
		CASE WhEN IU.LayoutUnitQty = -1 THEN 0 ELSE ISNULL(IU.LayoutUnitQty,0) END AS LayoutUnitQty,
		0 AS LayoutMaxWeightUpon,
		IU.PutawayZone,
		IU.PickArea,
		IU.SpecialField1,
		IU.SpecialField2,
		IU.SpecialField3,
		IU.SpecialField4,
		IU.DateCreated,
		IU.UserCreated,
		IU.DateModified,
		IU.UserModified,
		I.IdItem,
		I.ItemCode,
		I.Description,
		I.IdOwn,
		O.OwnName,
		I.ShortItemName,
		I.Status,
		I.CtrlSerialInbound,
		I.CtrlSerialInternal,
		I.CtrlSerialOutbound,
		I.LotControlInbound,
		I.LotControlInternal,
		I.LotControlOutbound,
		CASE WhEN I.Length = -1 THEN 0 ELSE ISNULL(I.Length,0) END AS Length,
		CASE WhEN I.Width  = -1 THEN 0 ELSE ISNULL(I.Width,0)  END AS Width,
		CASE WhEN I.Height = -1 THEN 0 ELSE ISNULL(I.Height,0) END AS Height,
		CASE WhEN I.Volume = -1 THEN 0 ELSE ISNULL(I.Volume,0) END AS Volume,
		CASE WhEN I.Weight = -1 THEN 0 ELSE ISNULL(I.Weight,0) END AS Weight,
		CASE WhEN I.NestedVolume = -1 THEN 0 ELSE ISNULL(I.NestedVolume,0) END AS NestedVolume,
		I.IdPutawayZone,
		I.ReOrderPoint,
		I.ReOrderQty,
		I.PalletQty,
		I.InspectionRequerid,
		I.InspectionCode,
		I.Price,
    IU.BigTicket
		FROM ItemUom IU
		INNER JOIN Item I ON I.IdItem = iu.IdItem
		INNER JOIN Owner O ON O.IdOwn = I.IdOwn
		WHERE 1=1
		@SQLPart
	</sql>
    <parameters>
      <parameter type="SQLPart">@SQLPart</parameter>
    </parameters>
    <filters>
      <filter name="IdUom" type="numericEqual">IU.IdUom</filter>
      <filter name="IdItem" type="numericEqual">IU.IdItem</filter>
      <filter name="UomCode" type="textEqual">IU.UomCode</filter>
      <filter name="ConversionFactor" type="numericEqual">IU.ConversionFactor</filter>
      <filter name="BarCode" type="textEqual">IU.BarCode</filter>
      <filter name="IdUomType" type="numericEqual">IU.IdUomType</filter>
      <filter name="UomName" type="textEqual">IU.UomName</filter>
      <filter name="Length" type="numericEqual">IU.Length</filter>
      <filter name="Width" type="numericEqual">IU.Width</filter>
      <filter name="Height" type="numericEqual">IU.Height</filter>
      <filter name="Volume" type="numericEqual">IU.Volume</filter>
      <filter name="Weight" type="numericEqual">IU.Weight</filter>
      <filter name="Status" type="numericEqual">IU.Status</filter>
      <filter name="LayoutUomQty" type="numericEqual">IU.LayoutUomQty</filter>
      <filter name="LayoutUnitQty" type="numericEqual">IU.LayoutUnitQty</filter>
      <filter name="LayoutMaxWeightUpon" type="numericEqual">IU.LayoutMaxWeightUpon</filter>
      <filter name="PutawayZone" type="textEqual">IU.PutawayZone</filter>
      <filter name="PickArea" type="textEqual">IU.PickArea</filter>
      <filter name="SpecialField1" type="textEqual">IU.SpecialField1</filter>
      <filter name="SpecialField2" type="textEqual">IU.SpecialField2</filter>
      <filter name="SpecialField3" type="textEqual">IU.SpecialField3</filter>
      <filter name="SpecialField4" type="textEqual">IU.SpecialField4</filter>
      <filter name="DateCreated" type="textEqual">IU.DateCreated</filter>
      <filter name="UserCreated" type="textEqual">IU.UserCreated</filter>
      <filter name="DateModified" type="textEqual">IU.DateModified</filter>
      <filter name="UserModified" type="textEqual">IU.UserModified</filter>
    </filters>
    <sub-querys>
      <sub-query code="OrderByIdUom">
        <sql>
          ORDER BY IU.IdUom
        </sql>
        <parameters>
        </parameters>
      </sub-query>
      <sub-query code="OrderByConversionFactor">
        <sql>
          ORDER BY IU.ConversionFactor
        </sql>
        <parameters>
        </parameters>
      </sub-query>
      <sub-query code="ConversionFactorGreateThanOne">
        <sql>
          AND IU.ConversionFactor > 1
        </sql>
        <parameters>
        </parameters>
      </sub-query>
      <sub-query code="ByUserOwner">
        <sql>
          AND EXISTS (SELECT IdOwn
          FROM UserOwner UO
          WHERE IdUserWms = @idUser
          AND O.IdOwn = UO.IdOwn)
        </sql>
        <parameters>
          <parameter type="Int">idUser</parameter>
        </parameters>
      </sub-query>
    </sub-querys>
  </query>

  <query code="GetReceiptIfzUnProcessedWithPaginationForNoReceiptedItems">
    <sql>
      SELECT TOP (@pagination)
      IdReceipt
      ,WhsCode
      ,OwnCode
      ,InboundNumber
      ,ReceiptDate
      ,Status
      ,ReceiptTypeCode
      ,ReferenceDoc
      ,ReferenceDocTypeCode
      ,VendorCode
      ,CarrierCode
      ,TruckCode
      ,DriverCode
      ,ShiftNumber
      ,UserWms
      ,SpecialField1
      ,SpecialField2
      ,SpecialField3
      ,SpecialField4
      ,StateInterface
      ,DateCreatedWMS
      ,DateReadERP
      ,IOSpecialField1
      ,IOSpecialField2
      ,IOSpecialField3
      ,IOSpecialField4
      FROM Receipt
      WHERE StateInterface = 'C'
      AND COALESCE(SpecialField1, '') = 'NO_RECEIPTED_ITEMS'
      @SQLPart
    </sql>
    <parameters>
      <parameter type="Int">pagination</parameter>
      <parameter type="SQLPart">@SQLPart</parameter>
    </parameters>
    <filters>
      <filter name="Owner" type="textIn">OwnCode</filter>
    </filters>
  </query>

  <!-- Begin PutawayIfz Section -->
  <query code="GetPutawayIfzUnProcessedWithPagination">
    <sql>
      SELECT TOP (@pagination)
      IdPutaway
      ,PutawayDate
      ,InboundNumber
      ,InboundTypeCode
      ,UserName
      ,WhsCode
      ,OwnCode
      ,IdLocCode
      ,IdLpnCode
      ,ItemCode
      ,CtgCode
      ,LotNumber
      ,FifoDate
      ,ExpirationDate
      ,FabricationDate
      ,ItemQty
      ,TotalWeight
      ,SpecialField1
      ,SpecialField2
      ,SpecialField3
      ,SpecialField4
      ,StateInterface
      ,DateCreatedWMS
      ,DateReadERP
      FROM Putaway
      WHERE StateInterface = 'C'
      @SQLPart
    </sql>
    <parameters>
      <parameter type="Int">pagination</parameter>
      <parameter type="SQLPart">@SQLPart</parameter>
    </parameters>
    <filters>
      <filter name="Owner" type="textIn">OwnCode</filter>
    </filters>
  </query>

  <query code="PutawayIfz_UpdateConfirm">
    <sql>
      UPDATE Putaway
      SET StateInterface  = @stateInterface
      WHERE IdPutaway IN (SELECT IdObjeto FROM WServiceMessage WHERE Ticket = @nroTicket)
    </sql>
    <parameters>
      <parameter type="String">stateInterface</parameter>
      <parameter type="Int">nroTicket</parameter>
    </parameters>
  </query>
  <!-- End BillinglogIfz Section -->

	<query code="GetSerialTrackIfzUnProcessedWithPagination">
		<sql>
			SELECT TOP (@pagination)
			Id
			,IdSerialTrack
			,WhsCode
			,OwnCode
			,ItemCode
			,ShortItemName
			,SerialNumber
			,OutboundNumber
			,MovementName
			,IdLpnCodeSource
			,IdLpnCodeTarget
			,IdLocCodeSource
			,IdLocCodeTarget
			,UserName
			,StateInterface
			FROM SerialTrack
			WHERE StateInterface = 'C'
			@SQLPart
		</sql>
		<parameters>
			<parameter type="Int">pagination</parameter>
			<parameter type="SQLPart">@SQLPart</parameter>
		</parameters>
		<filters>
			<filter name="Owner" type="textIn">OwnCode</filter>
		</filters>
	</query>
	
	<query code="SerialTrackIfz_UpdateConfirm">
    <sql>
		UPDATE SerialTrack
		SET StateInterface  = @stateInterface
		WHERE Id IN (select IdObjeto from WServiceMessage where Ticket = @nroTicket)
	</sql>
    <parameters>
      <parameter type="String">stateInterface</parameter>
      <parameter type="Int">nroTicket</parameter>
    </parameters>
  </query>
  
  <query code="SimpliRouteVisit_UpdateRoute">
    <sql>
      UPDATE SimpliRouteVisit
         SET Route =  @Route
       WHERE IdVisit = @IdSimpliRouteVisit
    </sql>
    <parameters>
      <parameter type="Int">IdSimpliRouteVisit</parameter>
      <parameter type="String">Route</parameter>
    </parameters>
  </query>

  <query code="TaskQueue_UpdateByLpn">
    <sql>
      UPDATE TaskQueue
         SET IdTrackTaskQueue = @IdTrackTaskQueue,
             UserModified =  @UserModified,
             DateModified =  @DateModified
       WHERE IdLpnCode = @IdLpnCode
    </sql>
    <parameters>
      <parameter type="Int">IdTrackTaskQueue</parameter>
      <parameter type="String">IdLpnCode</parameter>
      <parameter type="String">UserModified</parameter>
      <parameter type="DateTime">DateModified</parameter>
    </parameters>
  </query>
  
  <query code="GetSimpliRouteVisitByAnyParameter">
		<sql>
			SELECT
			SRV.IdSimpliRouteVisit,
			SRV.IdVisit,
			SRV.Route,
			SRV.IdLpnCode,
			SRV.IdTruckCode,
			SRV.DateCreated,
			SRV.ListXml
			FROM SimpliRouteVisit SRV
			@SQLPart
			ORDER BY SRV.IdSimpliRouteVisit;
		</sql>
		<parameters>
			<parameter type="SQLPart">@SQLPart</parameter>
		</parameters>
		<filters>
			<filter name="IdSimpliRouteVisit" type="numericIn">SRV.IdSimpliRouteVisit</filter>
			<filter name="IdVisit" type="numericIn">SRV.IdVisit</filter>
			<filter name="Route" type="textEqual">SRV.Route</filter>
			<filter name="IdLpnCode" type="textEqual">SRV.IdLpnCode</filter>
			<filter name="IdTruckCode" type="textEqual">SRV.IdTruckCode</filter>
			<filter name="DateCreated" type="textEqual">SRV.DateCreated</filter>
			<filter name="ListXml" type="textLike">SRV.ListXml</filter>
		</filters>
	</query>

</querys>